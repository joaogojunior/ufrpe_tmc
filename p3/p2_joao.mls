type st_12 = St_12_Off|St_12_High|St_12_Frostprotection|St_12_Eco
type st_11 = St_11_Open|St_11_Closed
type st_10 = St_10_Open|St_10_Closed
type st_9 = St_9_Ligado|St_9_Desligado
type st_8 = St_8_Ligado|St_8_Desligado
type st_7 = St_7_Ocupied|St_7_Empty
type st_6 = St_6_Minimal_safety|St_6_Eco|St_6_Comfort
type st_5 = St_5_Ligado|St_5_Desligado
type st_4 = St_4_Ocupied|St_4_Empty
type st_3 = St_3_Open|St_3_Closed
type st_2 = St_2_Off|St_2_High|St_2_Frostprotection|St_2_Eco
type st_1 = St_1_Standby|St_1_Reheat|St_1_Off|St_1_Maintain|St_1_Heat
type st = St_Waterfill|St_Washing|St_Standby|St_Spin|St_Rinse|St_Off
node washingmachine(e : bool; s : bool; c : bool) returns (p : int; i : int)
var v_133 : bool; v_132 : bool; v_131 : bool; v_130 : bool; v_129 : bool;
    v_128 : bool; v_127 : bool; v_126 : bool; v_125 : bool; v_124 : bool;
    v_123 : bool; v_122 : bool; v_121 : bool; v_120 : bool; v_119 : bool;
    v_118 : bool; v_117 : bool; v_116 : bool; v_115 : bool; v_114 : bool;
    v_113 : bool; v_112 : bool; v_111 : bool; v_110 : bool; v_109 : int;
    v_108 : int; v_107 : int; v_106 : int; v_105 : int; v_104 : int;
    v_103 : int; v_102 : int; v_101 : int; v_100 : int; v_99 : int;
    v_98 : int; ns_St_Standby_2_0 : bool; ns_St_Standby_3_0_0 : bool;
    ns_St_Standby_3_0_1 : bool; ns_St_Standby_2_1 : bool;
    ns_St_Standby_3_1_0 : bool; ns_St_Standby_3_1_1 : bool;
    ns_St_Spin_2_0 : bool; ns_St_Spin_3_0_0 : bool; ns_St_Spin_3_0_1 : bool;
    ns_St_Spin_2_1 : bool; ns_St_Spin_3_1_0 : bool; ns_St_Spin_3_1_1 : bool;
    ns_St_Rinse_2_0 : bool; ns_St_Rinse_3_0_0 : bool;
    ns_St_Rinse_3_0_1 : bool; ns_St_Rinse_2_1 : bool;
    ns_St_Rinse_3_1_0 : bool; ns_St_Rinse_3_1_1 : bool;
    ns_St_Washing_2_0 : bool; ns_St_Washing_3_0_0 : bool;
    ns_St_Washing_3_0_1 : bool; ns_St_Washing_2_1 : bool;
    ns_St_Washing_3_1_0 : bool; ns_St_Washing_3_1_1 : bool;
    ns_St_Waterfill_2_0 : bool; ns_St_Waterfill_3_0_0 : bool;
    ns_St_Waterfill_3_0_1 : bool; ns_St_Waterfill_2_1 : bool;
    ns_St_Waterfill_3_1_0 : bool; ns_St_Waterfill_3_1_1 : bool;
    ns_St_Off_2_0 : bool; ns_St_Off_3_0_0 : bool; ns_St_Off_3_0_1 : bool;
    ns_St_Off_2_1 : bool; ns_St_Off_3_1_0 : bool; ns_St_Off_3_1_1 : bool;
    ck_1_2_0 : bool; ck_1_3_0_0 : bool; ck_1_3_0_1 : bool; ck_1_2_1 : bool;
    ck_1_3_1_0 : bool; ck_1_3_1_1 : bool; nr_St_Standby : bool;
    ns_St_Standby_3 : bool; ns_St_Standby_2 : bool; ns_St_Standby_1 : bool;
    i_St_Standby : int; p_St_Standby : int; nr_St_Spin : bool;
    ns_St_Spin_3 : bool; ns_St_Spin_2 : bool; ns_St_Spin_1 : bool;
    i_St_Spin : int; p_St_Spin : int; nr_St_Rinse : bool;
    ns_St_Rinse_3 : bool; ns_St_Rinse_2 : bool; ns_St_Rinse_1 : bool;
    i_St_Rinse : int; p_St_Rinse : int; nr_St_Washing : bool;
    ns_St_Washing_3 : bool; ns_St_Washing_2 : bool; ns_St_Washing_1 : bool;
    i_St_Washing : int; p_St_Washing : int; nr_St_Waterfill : bool;
    ns_St_Waterfill_3 : bool; ns_St_Waterfill_2 : bool;
    ns_St_Waterfill_1 : bool; i_St_Waterfill : int; p_St_Waterfill : int;
    nr_St_Off : bool; ns_St_Off_3 : bool; ns_St_Off_2 : bool;
    ns_St_Off_1 : bool; i_St_Off : int; p_St_Off : int; ck_1_3 : bool;
    ck_1_2 : bool; ck_1_1 : bool; v_3_2_0 : bool; v_3_3_0_0 : bool;
    v_3_3_0_1 : bool; v_3_2_1 : bool; v_3_3_1_0 : bool; v_3_3_1_1 : bool;
    v_4 : bool; v_3_3 : bool; v_3_2 : bool; v_3_1 : bool; v_2 : bool;
    v_1 : bool; v : bool; v_160 : bool; v_159 : bool; v_158 : bool;
    v_157 : bool; v_156 : bool; v_155 : bool; v_154 : bool; v_153 : bool;
    v_152 : bool; v_151 : bool; v_150 : bool; v_149 : bool; v_148 : bool;
    v_147 : bool; v_146 : bool; v_145 : bool; v_144 : bool; v_143 : bool;
    v_142 : bool; v_141 : bool; v_140 : bool; v_139 : bool; v_138 : bool;
    v_137 : bool; v_136 : bool; v_135 : bool; v_134 : bool;
    s_2_St_Standby_2_0 : bool; s_2_St_Standby_3_0_0 : bool;
    s_2_St_Standby_3_0_1 : bool; s_2_St_Standby_2_1 : bool;
    s_2_St_Standby_3_1_0 : bool; s_2_St_Standby_3_1_1 : bool;
    s_2_St_Spin_2_0 : bool; s_2_St_Spin_3_0_0 : bool;
    s_2_St_Spin_3_0_1 : bool; s_2_St_Spin_2_1 : bool;
    s_2_St_Spin_3_1_0 : bool; s_2_St_Spin_3_1_1 : bool;
    s_2_St_Rinse_2_0 : bool; s_2_St_Rinse_3_0_0 : bool;
    s_2_St_Rinse_3_0_1 : bool; s_2_St_Rinse_2_1 : bool;
    s_2_St_Rinse_3_1_0 : bool; s_2_St_Rinse_3_1_1 : bool;
    s_2_St_Washing_2_0 : bool; s_2_St_Washing_3_0_0 : bool;
    s_2_St_Washing_3_0_1 : bool; s_2_St_Washing_2_1 : bool;
    s_2_St_Washing_3_1_0 : bool; s_2_St_Washing_3_1_1 : bool;
    s_2_St_Waterfill_2_0 : bool; s_2_St_Waterfill_3_0_0 : bool;
    s_2_St_Waterfill_3_0_1 : bool; s_2_St_Waterfill_2_1 : bool;
    s_2_St_Waterfill_3_1_0 : bool; s_2_St_Waterfill_3_1_1 : bool;
    s_2_St_Off_2_0 : bool; s_2_St_Off_3_0_0 : bool; s_2_St_Off_3_0_1 : bool;
    s_2_St_Off_2_1 : bool; s_2_St_Off_3_1_0 : bool; s_2_St_Off_3_1_1 : bool;
    ck_2_0 : bool; ck_3_0_0 : bool; ck_3_0_1 : bool; ck_2_1 : bool;
    ck_3_1_0 : bool; ck_3_1_1 : bool; r_St_Standby : bool;
    s_2_St_Standby_3 : bool; s_2_St_Standby_2 : bool;
    s_2_St_Standby_1 : bool; r_St_Spin : bool; s_2_St_Spin_3 : bool;
    s_2_St_Spin_2 : bool; s_2_St_Spin_1 : bool; r_St_Rinse : bool;
    s_2_St_Rinse_3 : bool; s_2_St_Rinse_2 : bool; s_2_St_Rinse_1 : bool;
    r_St_Washing : bool; s_2_St_Washing_3 : bool; s_2_St_Washing_2 : bool;
    s_2_St_Washing_1 : bool; r_St_Waterfill : bool;
    s_2_St_Waterfill_3 : bool; s_2_St_Waterfill_2 : bool;
    s_2_St_Waterfill_1 : bool; r_St_Off : bool; s_2_St_Off_3 : bool;
    s_2_St_Off_2 : bool; s_2_St_Off_1 : bool; ck_3 : bool; ck_2 : bool;
    ck_1_4 : bool; s_2_2_0 : bool; s_2_3_0_0 : bool; s_2_3_0_1 : bool;
    s_2_2_1 : bool; s_2_3_1_0 : bool; s_2_3_1_1 : bool; ns_2_0 : bool;
    ns_3_0_0 : bool; ns_3_0_1 : bool; ns_2_1 : bool; ns_3_1_0 : bool;
    ns_3_1_1 : bool; s_2_3 : bool; s_2_2 : bool; s_2_1 : bool; ns_3 : bool;
    ns_2 : bool; ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_1_1 = s_2_1;
  ck_1_2 = s_2_2;
  ck_1_3 = s_2_3;
  p_St_Off = 0;
  i_St_Off = 0;
  nr_St_Off = false;
  ns_St_Off_1 = true;
  ns_St_Off_2 = true;
  ns_St_Off_3 = true;
  p_St_Waterfill = 15;
  i_St_Waterfill = 1;
  nr_St_Waterfill = false;
  ns_St_Waterfill_1 = false;
  ns_St_Waterfill_2 = false;
  ns_St_Waterfill_3 = false;
  p_St_Washing = 250;
  i_St_Washing = 2;
  nr_St_Washing = false;
  ns_St_Washing_1 = false;
  ns_St_Washing_2 = true;
  ns_St_Washing_3 = false;
  p_St_Rinse = 200;
  i_St_Rinse = 3;
  nr_St_Rinse = false;
  ns_St_Rinse_1 = true;
  ns_St_Rinse_2 = true;
  ns_St_Rinse_3 = false;
  p_St_Spin = 800;
  i_St_Spin = 4;
  nr_St_Spin = false;
  ns_St_Spin_1 = true;
  ns_St_Spin_2 = false;
  ns_St_Spin_3 = false;
  p_St_Standby = 0;
  i_St_Standby = 5;
  nr_St_Standby = false;
  ns_St_Standby_1 = false;
  ns_St_Standby_2 = true;
  ns_St_Standby_3 = true;
  v_98 = merge ck_1_3_1_1 (true -> p_St_Off)(false -> p_St_Rinse);
  v_99 =
    merge ck_1_3_1_0
      (true -> 
        (((0 when true(ck_1_1)) when false(ck_1_2_1)) when true(ck_1_3_1_0)))
      (false -> p_St_Spin);
  v_100 = merge ck_1_2_1 (true -> v_98)(false -> v_99);
  v_101 = merge ck_1_3_0_1 (true -> p_St_Standby)(false -> p_St_Washing);
  v_102 =
    merge ck_1_3_0_0
      (true -> 
        (((0 when false(ck_1_1)) when false(ck_1_2_0)) when true(ck_1_3_0_0)))
      (false -> p_St_Waterfill);
  v_103 = merge ck_1_2_0 (true -> v_101)(false -> v_102);
  p = merge ck_1_1 (true -> v_100)(false -> v_103);
  v_104 = merge ck_1_3_1_1 (true -> i_St_Off)(false -> i_St_Rinse);
  v_105 =
    merge ck_1_3_1_0
      (true -> 
        (((0 when true(ck_1_1)) when false(ck_1_2_1)) when true(ck_1_3_1_0)))
      (false -> i_St_Spin);
  v_106 = merge ck_1_2_1 (true -> v_104)(false -> v_105);
  v_107 = merge ck_1_3_0_1 (true -> i_St_Standby)(false -> i_St_Washing);
  v_108 =
    merge ck_1_3_0_0
      (true -> 
        (((0 when false(ck_1_1)) when false(ck_1_2_0)) when true(ck_1_3_0_0)))
      (false -> i_St_Waterfill);
  v_109 = merge ck_1_2_0 (true -> v_107)(false -> v_108);
  i = merge ck_1_1 (true -> v_106)(false -> v_109);
  v_110 = merge ck_1_3_1_1 (true -> ns_St_Off_1)(false -> ns_St_Rinse_1);
  v_111 = merge ck_1_3_1_1 (true -> ns_St_Off_2)(false -> ns_St_Rinse_2);
  v_112 = merge ck_1_3_1_1 (true -> ns_St_Off_3)(false -> ns_St_Rinse_3);
  v_113 =
    merge ck_1_3_1_0
      (true -> 
        (((true when true(ck_1_1)) when false(ck_1_2_1))
          when true(ck_1_3_1_0)))
      (false -> ns_St_Spin_1);
  v_114 =
    merge ck_1_3_1_0
      (true -> 
        (((true when true(ck_1_1)) when false(ck_1_2_1))
          when true(ck_1_3_1_0)))
      (false -> ns_St_Spin_2);
  v_115 =
    merge ck_1_3_1_0
      (true -> 
        (((true when true(ck_1_1)) when false(ck_1_2_1))
          when true(ck_1_3_1_0)))
      (false -> ns_St_Spin_3);
  v_116 =
    merge ck_1_3_0_1 (true -> ns_St_Standby_1)(false -> ns_St_Washing_1);
  v_117 =
    merge ck_1_3_0_1 (true -> ns_St_Standby_2)(false -> ns_St_Washing_2);
  v_118 =
    merge ck_1_3_0_1 (true -> ns_St_Standby_3)(false -> ns_St_Washing_3);
  v_119 =
    merge ck_1_3_0_0
      (true -> 
        (((true when false(ck_1_1)) when false(ck_1_2_0))
          when true(ck_1_3_0_0)))
      (false -> ns_St_Waterfill_1);
  v_120 =
    merge ck_1_3_0_0
      (true -> 
        (((true when false(ck_1_1)) when false(ck_1_2_0))
          when true(ck_1_3_0_0)))
      (false -> ns_St_Waterfill_2);
  v_121 =
    merge ck_1_3_0_0
      (true -> 
        (((true when false(ck_1_1)) when false(ck_1_2_0))
          when true(ck_1_3_0_0)))
      (false -> ns_St_Waterfill_3);
  v_122 = merge ck_1_2_1 (true -> v_110)(false -> v_113);
  v_123 = merge ck_1_2_1 (true -> v_111)(false -> v_114);
  v_124 = merge ck_1_2_1 (true -> v_112)(false -> v_115);
  v_125 = merge ck_1_2_0 (true -> v_116)(false -> v_119);
  v_126 = merge ck_1_2_0 (true -> v_117)(false -> v_120);
  v_127 = merge ck_1_2_0 (true -> v_118)(false -> v_121);
  ns_1 = merge ck_1_1 (true -> v_122)(false -> v_125);
  ns_2 = merge ck_1_1 (true -> v_123)(false -> v_126);
  ns_3 = merge ck_1_1 (true -> v_124)(false -> v_127);
  v_128 = merge ck_1_3_1_1 (true -> nr_St_Off)(false -> nr_St_Rinse);
  v_129 =
    merge ck_1_3_1_0
      (true -> 
        (((true when true(ck_1_1)) when false(ck_1_2_1))
          when true(ck_1_3_1_0)))
      (false -> nr_St_Spin);
  v_130 = merge ck_1_2_1 (true -> v_128)(false -> v_129);
  v_131 = merge ck_1_3_0_1 (true -> nr_St_Standby)(false -> nr_St_Washing);
  v_132 =
    merge ck_1_3_0_0
      (true -> 
        (((true when false(ck_1_1)) when false(ck_1_2_0))
          when true(ck_1_3_0_0)))
      (false -> nr_St_Waterfill);
  v_133 = merge ck_1_2_0 (true -> v_131)(false -> v_132);
  nr = merge ck_1_1 (true -> v_130)(false -> v_133);
  ck_1_3_1_1 = ((ck_1_3 when true(ck_1_1)) when true(ck_1_2_1));
  ck_1_3_1_0 = ((ck_1_3 when true(ck_1_1)) when false(ck_1_2_1));
  ck_1_2_1 = (ck_1_2 when true(ck_1_1));
  ck_1_3_0_1 = ((ck_1_3 when false(ck_1_1)) when true(ck_1_2_0));
  ck_1_3_0_0 = ((ck_1_3 when false(ck_1_1)) when false(ck_1_2_0));
  ck_1_2_0 = (ck_1_2 when false(ck_1_1));
  ns_St_Off_3_1_1 =
    ((ns_St_Off_3 when true(ns_St_Off_1)) when true(ns_St_Off_2_1));
  ns_St_Off_3_1_0 =
    ((ns_St_Off_3 when true(ns_St_Off_1)) when false(ns_St_Off_2_1));
  ns_St_Off_2_1 = (ns_St_Off_2 when true(ns_St_Off_1));
  ns_St_Off_3_0_1 =
    ((ns_St_Off_3 when false(ns_St_Off_1)) when true(ns_St_Off_2_0));
  ns_St_Off_3_0_0 =
    ((ns_St_Off_3 when false(ns_St_Off_1)) when false(ns_St_Off_2_0));
  ns_St_Off_2_0 = (ns_St_Off_2 when false(ns_St_Off_1));
  ns_St_Waterfill_3_1_1 =
    ((ns_St_Waterfill_3 when true(ns_St_Waterfill_1))
      when true(ns_St_Waterfill_2_1));
  ns_St_Waterfill_3_1_0 =
    ((ns_St_Waterfill_3 when true(ns_St_Waterfill_1))
      when false(ns_St_Waterfill_2_1));
  ns_St_Waterfill_2_1 = (ns_St_Waterfill_2 when true(ns_St_Waterfill_1));
  ns_St_Waterfill_3_0_1 =
    ((ns_St_Waterfill_3 when false(ns_St_Waterfill_1))
      when true(ns_St_Waterfill_2_0));
  ns_St_Waterfill_3_0_0 =
    ((ns_St_Waterfill_3 when false(ns_St_Waterfill_1))
      when false(ns_St_Waterfill_2_0));
  ns_St_Waterfill_2_0 = (ns_St_Waterfill_2 when false(ns_St_Waterfill_1));
  ns_St_Washing_3_1_1 =
    ((ns_St_Washing_3 when true(ns_St_Washing_1))
      when true(ns_St_Washing_2_1));
  ns_St_Washing_3_1_0 =
    ((ns_St_Washing_3 when true(ns_St_Washing_1))
      when false(ns_St_Washing_2_1));
  ns_St_Washing_2_1 = (ns_St_Washing_2 when true(ns_St_Washing_1));
  ns_St_Washing_3_0_1 =
    ((ns_St_Washing_3 when false(ns_St_Washing_1))
      when true(ns_St_Washing_2_0));
  ns_St_Washing_3_0_0 =
    ((ns_St_Washing_3 when false(ns_St_Washing_1))
      when false(ns_St_Washing_2_0));
  ns_St_Washing_2_0 = (ns_St_Washing_2 when false(ns_St_Washing_1));
  ns_St_Rinse_3_1_1 =
    ((ns_St_Rinse_3 when true(ns_St_Rinse_1)) when true(ns_St_Rinse_2_1));
  ns_St_Rinse_3_1_0 =
    ((ns_St_Rinse_3 when true(ns_St_Rinse_1)) when false(ns_St_Rinse_2_1));
  ns_St_Rinse_2_1 = (ns_St_Rinse_2 when true(ns_St_Rinse_1));
  ns_St_Rinse_3_0_1 =
    ((ns_St_Rinse_3 when false(ns_St_Rinse_1)) when true(ns_St_Rinse_2_0));
  ns_St_Rinse_3_0_0 =
    ((ns_St_Rinse_3 when false(ns_St_Rinse_1)) when false(ns_St_Rinse_2_0));
  ns_St_Rinse_2_0 = (ns_St_Rinse_2 when false(ns_St_Rinse_1));
  ns_St_Spin_3_1_1 =
    ((ns_St_Spin_3 when true(ns_St_Spin_1)) when true(ns_St_Spin_2_1));
  ns_St_Spin_3_1_0 =
    ((ns_St_Spin_3 when true(ns_St_Spin_1)) when false(ns_St_Spin_2_1));
  ns_St_Spin_2_1 = (ns_St_Spin_2 when true(ns_St_Spin_1));
  ns_St_Spin_3_0_1 =
    ((ns_St_Spin_3 when false(ns_St_Spin_1)) when true(ns_St_Spin_2_0));
  ns_St_Spin_3_0_0 =
    ((ns_St_Spin_3 when false(ns_St_Spin_1)) when false(ns_St_Spin_2_0));
  ns_St_Spin_2_0 = (ns_St_Spin_2 when false(ns_St_Spin_1));
  ns_St_Standby_3_1_1 =
    ((ns_St_Standby_3 when true(ns_St_Standby_1))
      when true(ns_St_Standby_2_1));
  ns_St_Standby_3_1_0 =
    ((ns_St_Standby_3 when true(ns_St_Standby_1))
      when false(ns_St_Standby_2_1));
  ns_St_Standby_2_1 = (ns_St_Standby_2 when true(ns_St_Standby_1));
  ns_St_Standby_3_0_1 =
    ((ns_St_Standby_3 when false(ns_St_Standby_1))
      when true(ns_St_Standby_2_0));
  ns_St_Standby_3_0_0 =
    ((ns_St_Standby_3 when false(ns_St_Standby_1))
      when false(ns_St_Standby_2_0));
  ns_St_Standby_2_0 = (ns_St_Standby_2 when false(ns_St_Standby_1));
  v_134 = true fby ns_1;
  v_135 = true fby ns_2;
  v_136 = true fby ns_3;
  ck_1_4 = v_134;
  ck_2 = v_135;
  ck_3 = v_136;
  r_St_Off =
    if (((s when true(ck_1_4)) when true(ck_2_1)) when true(ck_3_1_1))
    then true
    else (((pnr when true(ck_1_4)) when true(ck_2_1)) when true(ck_3_1_1));
  s_2_St_Off_1 =
    if (((s when true(ck_1_4)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else true;
  s_2_St_Off_2 =
    if (((s when true(ck_1_4)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else true;
  s_2_St_Off_3 =
    if (((s when true(ck_1_4)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else true;
  r_St_Waterfill = if v_1 then true else v_4;
  s_2_St_Waterfill_1 = if v_1 then false else v_3_1;
  s_2_St_Waterfill_2 = if v_1 then true else v_3_2;
  s_2_St_Waterfill_3 = if v_1 then true else v_3_3;
  v_4 =
    if v_2
    then true
    else (((pnr when false(ck_1_4)) when false(ck_2_0)) when false(ck_3_0_0));
  v_3_1 = if v_2 then false else false;
  v_3_2 = if v_2 then true else false;
  v_3_3 = if v_2 then false else false;
  v_2 =
    ((((e when false(ck_1_4)) when false(ck_2_0)) when false(ck_3_0_0)) &
     (((c when false(ck_1_4)) when false(ck_2_0)) when false(ck_3_0_0)));
  v_1 =
    ((((e when false(ck_1_4)) when false(ck_2_0)) when false(ck_3_0_0)) & v);
  v = not((((c when false(ck_1_4)) when false(ck_2_0)) when false(ck_3_0_0)));
  v_3_3_1_1 = ((v_3_3 when true(v_3_1)) when true(v_3_2_1));
  v_3_3_1_0 = ((v_3_3 when true(v_3_1)) when false(v_3_2_1));
  v_3_2_1 = (v_3_2 when true(v_3_1));
  v_3_3_0_1 = ((v_3_3 when false(v_3_1)) when true(v_3_2_0));
  v_3_3_0_0 = ((v_3_3 when false(v_3_1)) when false(v_3_2_0));
  v_3_2_0 = (v_3_2 when false(v_3_1));
  r_St_Washing =
    if (((e when false(ck_1_4)) when true(ck_2_0)) when false(ck_3_0_1))
    then true
    else (((pnr when false(ck_1_4)) when true(ck_2_0)) when false(ck_3_0_1));
  s_2_St_Washing_1 =
    if (((e when false(ck_1_4)) when true(ck_2_0)) when false(ck_3_0_1))
    then true
    else false;
  s_2_St_Washing_2 =
    if (((e when false(ck_1_4)) when true(ck_2_0)) when false(ck_3_0_1))
    then true
    else true;
  s_2_St_Washing_3 =
    if (((e when false(ck_1_4)) when true(ck_2_0)) when false(ck_3_0_1))
    then false
    else false;
  r_St_Rinse =
    if (((e when true(ck_1_4)) when true(ck_2_1)) when false(ck_3_1_1))
    then true
    else (((pnr when true(ck_1_4)) when true(ck_2_1)) when false(ck_3_1_1));
  s_2_St_Rinse_1 =
    if (((e when true(ck_1_4)) when true(ck_2_1)) when false(ck_3_1_1))
    then true
    else true;
  s_2_St_Rinse_2 =
    if (((e when true(ck_1_4)) when true(ck_2_1)) when false(ck_3_1_1))
    then false
    else true;
  s_2_St_Rinse_3 =
    if (((e when true(ck_1_4)) when true(ck_2_1)) when false(ck_3_1_1))
    then false
    else false;
  r_St_Spin =
    if (((e when true(ck_1_4)) when false(ck_2_1)) when false(ck_3_1_0))
    then true
    else (((pnr when true(ck_1_4)) when false(ck_2_1)) when false(ck_3_1_0));
  s_2_St_Spin_1 =
    if (((e when true(ck_1_4)) when false(ck_2_1)) when false(ck_3_1_0))
    then true
    else true;
  s_2_St_Spin_2 =
    if (((e when true(ck_1_4)) when false(ck_2_1)) when false(ck_3_1_0))
    then true
    else false;
  s_2_St_Spin_3 =
    if (((e when true(ck_1_4)) when false(ck_2_1)) when false(ck_3_1_0))
    then true
    else false;
  r_St_Standby =
    if (((c when false(ck_1_4)) when true(ck_2_0)) when true(ck_3_0_1))
    then true
    else (((pnr when false(ck_1_4)) when true(ck_2_0)) when true(ck_3_0_1));
  s_2_St_Standby_1 =
    if (((c when false(ck_1_4)) when true(ck_2_0)) when true(ck_3_0_1))
    then false
    else false;
  s_2_St_Standby_2 =
    if (((c when false(ck_1_4)) when true(ck_2_0)) when true(ck_3_0_1))
    then true
    else true;
  s_2_St_Standby_3 =
    if (((c when false(ck_1_4)) when true(ck_2_0)) when true(ck_3_0_1))
    then false
    else true;
  v_137 = merge ck_3_1_1 (true -> s_2_St_Off_1)(false -> s_2_St_Rinse_1);
  v_138 = merge ck_3_1_1 (true -> s_2_St_Off_2)(false -> s_2_St_Rinse_2);
  v_139 = merge ck_3_1_1 (true -> s_2_St_Off_3)(false -> s_2_St_Rinse_3);
  v_140 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1_4)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_2_St_Spin_1);
  v_141 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1_4)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_2_St_Spin_2);
  v_142 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1_4)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_2_St_Spin_3);
  v_143 =
    merge ck_3_0_1 (true -> s_2_St_Standby_1)(false -> s_2_St_Washing_1);
  v_144 =
    merge ck_3_0_1 (true -> s_2_St_Standby_2)(false -> s_2_St_Washing_2);
  v_145 =
    merge ck_3_0_1 (true -> s_2_St_Standby_3)(false -> s_2_St_Washing_3);
  v_146 =
    merge ck_3_0_0
      (true -> 
        (((true when false(ck_1_4)) when false(ck_2_0)) when true(ck_3_0_0)))
      (false -> s_2_St_Waterfill_1);
  v_147 =
    merge ck_3_0_0
      (true -> 
        (((true when false(ck_1_4)) when false(ck_2_0)) when true(ck_3_0_0)))
      (false -> s_2_St_Waterfill_2);
  v_148 =
    merge ck_3_0_0
      (true -> 
        (((true when false(ck_1_4)) when false(ck_2_0)) when true(ck_3_0_0)))
      (false -> s_2_St_Waterfill_3);
  v_149 = merge ck_2_1 (true -> v_137)(false -> v_140);
  v_150 = merge ck_2_1 (true -> v_138)(false -> v_141);
  v_151 = merge ck_2_1 (true -> v_139)(false -> v_142);
  v_152 = merge ck_2_0 (true -> v_143)(false -> v_146);
  v_153 = merge ck_2_0 (true -> v_144)(false -> v_147);
  v_154 = merge ck_2_0 (true -> v_145)(false -> v_148);
  s_2_1 = merge ck_1_4 (true -> v_149)(false -> v_152);
  s_2_2 = merge ck_1_4 (true -> v_150)(false -> v_153);
  s_2_3 = merge ck_1_4 (true -> v_151)(false -> v_154);
  v_155 = merge ck_3_1_1 (true -> r_St_Off)(false -> r_St_Rinse);
  v_156 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1_4)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> r_St_Spin);
  v_157 = merge ck_2_1 (true -> v_155)(false -> v_156);
  v_158 = merge ck_3_0_1 (true -> r_St_Standby)(false -> r_St_Washing);
  v_159 =
    merge ck_3_0_0
      (true -> 
        (((true when false(ck_1_4)) when false(ck_2_0)) when true(ck_3_0_0)))
      (false -> r_St_Waterfill);
  v_160 = merge ck_2_0 (true -> v_158)(false -> v_159);
  r = merge ck_1_4 (true -> v_157)(false -> v_160);
  ck_3_1_1 = ((ck_3 when true(ck_1_4)) when true(ck_2_1));
  ck_3_1_0 = ((ck_3 when true(ck_1_4)) when false(ck_2_1));
  ck_2_1 = (ck_2 when true(ck_1_4));
  ck_3_0_1 = ((ck_3 when false(ck_1_4)) when true(ck_2_0));
  ck_3_0_0 = ((ck_3 when false(ck_1_4)) when false(ck_2_0));
  ck_2_0 = (ck_2 when false(ck_1_4));
  s_2_St_Off_3_1_1 =
    ((s_2_St_Off_3 when true(s_2_St_Off_1)) when true(s_2_St_Off_2_1));
  s_2_St_Off_3_1_0 =
    ((s_2_St_Off_3 when true(s_2_St_Off_1)) when false(s_2_St_Off_2_1));
  s_2_St_Off_2_1 = (s_2_St_Off_2 when true(s_2_St_Off_1));
  s_2_St_Off_3_0_1 =
    ((s_2_St_Off_3 when false(s_2_St_Off_1)) when true(s_2_St_Off_2_0));
  s_2_St_Off_3_0_0 =
    ((s_2_St_Off_3 when false(s_2_St_Off_1)) when false(s_2_St_Off_2_0));
  s_2_St_Off_2_0 = (s_2_St_Off_2 when false(s_2_St_Off_1));
  s_2_St_Waterfill_3_1_1 =
    ((s_2_St_Waterfill_3 when true(s_2_St_Waterfill_1))
      when true(s_2_St_Waterfill_2_1));
  s_2_St_Waterfill_3_1_0 =
    ((s_2_St_Waterfill_3 when true(s_2_St_Waterfill_1))
      when false(s_2_St_Waterfill_2_1));
  s_2_St_Waterfill_2_1 = (s_2_St_Waterfill_2 when true(s_2_St_Waterfill_1));
  s_2_St_Waterfill_3_0_1 =
    ((s_2_St_Waterfill_3 when false(s_2_St_Waterfill_1))
      when true(s_2_St_Waterfill_2_0));
  s_2_St_Waterfill_3_0_0 =
    ((s_2_St_Waterfill_3 when false(s_2_St_Waterfill_1))
      when false(s_2_St_Waterfill_2_0));
  s_2_St_Waterfill_2_0 = (s_2_St_Waterfill_2 when false(s_2_St_Waterfill_1));
  s_2_St_Washing_3_1_1 =
    ((s_2_St_Washing_3 when true(s_2_St_Washing_1))
      when true(s_2_St_Washing_2_1));
  s_2_St_Washing_3_1_0 =
    ((s_2_St_Washing_3 when true(s_2_St_Washing_1))
      when false(s_2_St_Washing_2_1));
  s_2_St_Washing_2_1 = (s_2_St_Washing_2 when true(s_2_St_Washing_1));
  s_2_St_Washing_3_0_1 =
    ((s_2_St_Washing_3 when false(s_2_St_Washing_1))
      when true(s_2_St_Washing_2_0));
  s_2_St_Washing_3_0_0 =
    ((s_2_St_Washing_3 when false(s_2_St_Washing_1))
      when false(s_2_St_Washing_2_0));
  s_2_St_Washing_2_0 = (s_2_St_Washing_2 when false(s_2_St_Washing_1));
  s_2_St_Rinse_3_1_1 =
    ((s_2_St_Rinse_3 when true(s_2_St_Rinse_1)) when true(s_2_St_Rinse_2_1));
  s_2_St_Rinse_3_1_0 =
    ((s_2_St_Rinse_3 when true(s_2_St_Rinse_1)) when false(s_2_St_Rinse_2_1));
  s_2_St_Rinse_2_1 = (s_2_St_Rinse_2 when true(s_2_St_Rinse_1));
  s_2_St_Rinse_3_0_1 =
    ((s_2_St_Rinse_3 when false(s_2_St_Rinse_1)) when true(s_2_St_Rinse_2_0));
  s_2_St_Rinse_3_0_0 =
    ((s_2_St_Rinse_3 when false(s_2_St_Rinse_1))
      when false(s_2_St_Rinse_2_0));
  s_2_St_Rinse_2_0 = (s_2_St_Rinse_2 when false(s_2_St_Rinse_1));
  s_2_St_Spin_3_1_1 =
    ((s_2_St_Spin_3 when true(s_2_St_Spin_1)) when true(s_2_St_Spin_2_1));
  s_2_St_Spin_3_1_0 =
    ((s_2_St_Spin_3 when true(s_2_St_Spin_1)) when false(s_2_St_Spin_2_1));
  s_2_St_Spin_2_1 = (s_2_St_Spin_2 when true(s_2_St_Spin_1));
  s_2_St_Spin_3_0_1 =
    ((s_2_St_Spin_3 when false(s_2_St_Spin_1)) when true(s_2_St_Spin_2_0));
  s_2_St_Spin_3_0_0 =
    ((s_2_St_Spin_3 when false(s_2_St_Spin_1)) when false(s_2_St_Spin_2_0));
  s_2_St_Spin_2_0 = (s_2_St_Spin_2 when false(s_2_St_Spin_1));
  s_2_St_Standby_3_1_1 =
    ((s_2_St_Standby_3 when true(s_2_St_Standby_1))
      when true(s_2_St_Standby_2_1));
  s_2_St_Standby_3_1_0 =
    ((s_2_St_Standby_3 when true(s_2_St_Standby_1))
      when false(s_2_St_Standby_2_1));
  s_2_St_Standby_2_1 = (s_2_St_Standby_2 when true(s_2_St_Standby_1));
  s_2_St_Standby_3_0_1 =
    ((s_2_St_Standby_3 when false(s_2_St_Standby_1))
      when true(s_2_St_Standby_2_0));
  s_2_St_Standby_3_0_0 =
    ((s_2_St_Standby_3 when false(s_2_St_Standby_1))
      when false(s_2_St_Standby_2_0));
  s_2_St_Standby_2_0 = (s_2_St_Standby_2 when false(s_2_St_Standby_1));
  ns_3_1_1 = ((ns_3 when true(ns_1)) when true(ns_2_1));
  ns_3_1_0 = ((ns_3 when true(ns_1)) when false(ns_2_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_3_0_1 = ((ns_3 when false(ns_1)) when true(ns_2_0));
  ns_3_0_0 = ((ns_3 when false(ns_1)) when false(ns_2_0));
  ns_2_0 = (ns_2 when false(ns_1));
  s_2_3_1_1 = ((s_2_3 when true(s_2_1)) when true(s_2_2_1));
  s_2_3_1_0 = ((s_2_3 when true(s_2_1)) when false(s_2_2_1));
  s_2_2_1 = (s_2_2 when true(s_2_1));
  s_2_3_0_1 = ((s_2_3 when false(s_2_1)) when true(s_2_2_0));
  s_2_3_0_0 = ((s_2_3 when false(s_2_1)) when false(s_2_2_0));
  s_2_2_0 = (s_2_2 when false(s_2_1))
tel

node oven(f : bool; s : bool; c : bool; tok : bool; cold : bool)
returns (p : int; i : int)
var v_190 : bool; v_189 : bool; v_188 : bool; v_187 : bool; v_186 : bool;
    v_185 : bool; v_184 : bool; v_183 : bool; v_182 : bool; v_181 : bool;
    v_180 : bool; v_179 : bool; v_178 : bool; v_177 : bool; v_176 : bool;
    v_175 : bool; v_174 : bool; v_173 : bool; v_172 : bool; v_171 : bool;
    v_170 : int; v_169 : int; v_168 : int; v_167 : int; v_166 : int;
    v_165 : int; v_164 : int; v_163 : int; v_162 : int; v_161 : int;
    ns_St_1_Standby_2_0 : bool; ns_St_1_Standby_3_0_0 : bool;
    ns_St_1_Standby_3_0_1 : bool; ns_St_1_Standby_2_1 : bool;
    ns_St_1_Standby_3_1_0 : bool; ns_St_1_Standby_3_1_1 : bool;
    ns_St_1_Reheat_2_0 : bool; ns_St_1_Reheat_3_0_0 : bool;
    ns_St_1_Reheat_3_0_1 : bool; ns_St_1_Reheat_2_1 : bool;
    ns_St_1_Reheat_3_1_0 : bool; ns_St_1_Reheat_3_1_1 : bool;
    ns_St_1_Maintain_2_0 : bool; ns_St_1_Maintain_3_0_0 : bool;
    ns_St_1_Maintain_3_0_1 : bool; ns_St_1_Maintain_2_1 : bool;
    ns_St_1_Maintain_3_1_0 : bool; ns_St_1_Maintain_3_1_1 : bool;
    ns_St_1_Heat_2_0 : bool; ns_St_1_Heat_3_0_0 : bool;
    ns_St_1_Heat_3_0_1 : bool; ns_St_1_Heat_2_1 : bool;
    ns_St_1_Heat_3_1_0 : bool; ns_St_1_Heat_3_1_1 : bool;
    ns_St_1_Off_2_0 : bool; ns_St_1_Off_3_0_0 : bool;
    ns_St_1_Off_3_0_1 : bool; ns_St_1_Off_2_1 : bool;
    ns_St_1_Off_3_1_0 : bool; ns_St_1_Off_3_1_1 : bool; ck_2_2_0 : bool;
    ck_2_3_0_0 : bool; ck_2_3_0_1 : bool; ck_2_2_1 : bool; ck_2_3_1_0 : bool;
    ck_2_3_1_1 : bool; nr_St_1_Standby : bool; ns_St_1_Standby_3 : bool;
    ns_St_1_Standby_2 : bool; ns_St_1_Standby_1 : bool; i_St_1_Standby : int;
    p_St_1_Standby : int; nr_St_1_Reheat : bool; ns_St_1_Reheat_3 : bool;
    ns_St_1_Reheat_2 : bool; ns_St_1_Reheat_1 : bool; i_St_1_Reheat : int;
    p_St_1_Reheat : int; nr_St_1_Maintain : bool; ns_St_1_Maintain_3 : bool;
    ns_St_1_Maintain_2 : bool; ns_St_1_Maintain_1 : bool;
    i_St_1_Maintain : int; p_St_1_Maintain : int; nr_St_1_Heat : bool;
    ns_St_1_Heat_3 : bool; ns_St_1_Heat_2 : bool; ns_St_1_Heat_1 : bool;
    i_St_1_Heat : int; p_St_1_Heat : int; nr_St_1_Off : bool;
    ns_St_1_Off_3 : bool; ns_St_1_Off_2 : bool; ns_St_1_Off_1 : bool;
    i_St_1_Off : int; p_St_1_Off : int; ck_2_3 : bool; ck_2_2 : bool;
    ck_2_1 : bool; v_14_2_0 : bool; v_14_3_0_0 : bool; v_14_3_0_1 : bool;
    v_14_2_1 : bool; v_14_3_1_0 : bool; v_14_3_1_1 : bool; v_15 : bool;
    v_14_3 : bool; v_14_2 : bool; v_14_1 : bool; v_13 : bool; v_12 : bool;
    v_11 : bool; v_9_2_0 : bool; v_9_3_0_0 : bool; v_9_3_0_1 : bool;
    v_9_2_1 : bool; v_9_3_1_0 : bool; v_9_3_1_1 : bool; v_10 : bool;
    v_9_3 : bool; v_9_2 : bool; v_9_1 : bool; v_7_2_0 : bool;
    v_7_3_0_0 : bool; v_7_3_0_1 : bool; v_7_2_1 : bool; v_7_3_1_0 : bool;
    v_7_3_1_1 : bool; v_8 : bool; v_7_3 : bool; v_7_2 : bool; v_7_1 : bool;
    v_6 : bool; v_2_0 : bool; v_3_0_0 : bool; v_3_0_1 : bool; v_2_1 : bool;
    v_3_1_0 : bool; v_3_1_1 : bool; v_5 : bool; v_3 : bool; v_2 : bool;
    v_1 : bool; v_213 : bool; v_212 : bool; v_211 : bool; v_210 : bool;
    v_209 : bool; v_208 : bool; v_207 : bool; v_206 : bool; v_205 : bool;
    v_204 : bool; v_203 : bool; v_202 : bool; v_201 : bool; v_200 : bool;
    v_199 : bool; v_198 : bool; v_197 : bool; v_196 : bool; v_195 : bool;
    v_194 : bool; v_193 : bool; v_192 : bool; v_191 : bool;
    s_3_St_1_Standby_2_0 : bool; s_3_St_1_Standby_3_0_0 : bool;
    s_3_St_1_Standby_3_0_1 : bool; s_3_St_1_Standby_2_1 : bool;
    s_3_St_1_Standby_3_1_0 : bool; s_3_St_1_Standby_3_1_1 : bool;
    s_3_St_1_Reheat_2_0 : bool; s_3_St_1_Reheat_3_0_0 : bool;
    s_3_St_1_Reheat_3_0_1 : bool; s_3_St_1_Reheat_2_1 : bool;
    s_3_St_1_Reheat_3_1_0 : bool; s_3_St_1_Reheat_3_1_1 : bool;
    s_3_St_1_Maintain_2_0 : bool; s_3_St_1_Maintain_3_0_0 : bool;
    s_3_St_1_Maintain_3_0_1 : bool; s_3_St_1_Maintain_2_1 : bool;
    s_3_St_1_Maintain_3_1_0 : bool; s_3_St_1_Maintain_3_1_1 : bool;
    s_3_St_1_Heat_2_0 : bool; s_3_St_1_Heat_3_0_0 : bool;
    s_3_St_1_Heat_3_0_1 : bool; s_3_St_1_Heat_2_1 : bool;
    s_3_St_1_Heat_3_1_0 : bool; s_3_St_1_Heat_3_1_1 : bool;
    s_3_St_1_Off_2_0 : bool; s_3_St_1_Off_3_0_0 : bool;
    s_3_St_1_Off_3_0_1 : bool; s_3_St_1_Off_2_1 : bool;
    s_3_St_1_Off_3_1_0 : bool; s_3_St_1_Off_3_1_1 : bool; ck_2_4_0 : bool;
    ck_3_0_0 : bool; ck_3_0_1 : bool; ck_2_4_1 : bool; ck_3_1_0 : bool;
    ck_3_1_1 : bool; r_St_1_Standby : bool; s_3_St_1_Standby_3 : bool;
    s_3_St_1_Standby_2 : bool; s_3_St_1_Standby_1 : bool;
    r_St_1_Reheat : bool; s_3_St_1_Reheat_3 : bool; s_3_St_1_Reheat_2 : bool;
    s_3_St_1_Reheat_1 : bool; r_St_1_Maintain : bool;
    s_3_St_1_Maintain_3 : bool; s_3_St_1_Maintain_2 : bool;
    s_3_St_1_Maintain_1 : bool; r_St_1_Heat : bool; s_3_St_1_Heat_3 : bool;
    s_3_St_1_Heat_2 : bool; s_3_St_1_Heat_1 : bool; r_St_1_Off : bool;
    s_3_St_1_Off_3 : bool; s_3_St_1_Off_2 : bool; s_3_St_1_Off_1 : bool;
    ck_3 : bool; ck_2_4 : bool; ck_1 : bool; s_3_2_0 : bool;
    s_3_3_0_0 : bool; s_3_3_0_1 : bool; s_3_2_1 : bool; s_3_3_1_0 : bool;
    s_3_3_1_1 : bool; ns_2_0 : bool; ns_3_0_0 : bool; ns_3_0_1 : bool;
    ns_2_1 : bool; ns_3_1_0 : bool; ns_3_1_1 : bool; s_3_3 : bool;
    s_3_2 : bool; s_3_1 : bool; ns_3 : bool; ns_2 : bool; ns_1 : bool;
    r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_2_1 = s_3_1;
  ck_2_2 = s_3_2;
  ck_2_3 = s_3_3;
  p_St_1_Off = 0;
  i_St_1_Off = 0;
  nr_St_1_Off = false;
  ns_St_1_Off_1 = true;
  ns_St_1_Off_2 = false;
  ns_St_1_Off_3 = false;
  p_St_1_Heat = 1500;
  i_St_1_Heat = 1;
  nr_St_1_Heat = false;
  ns_St_1_Heat_1 = true;
  ns_St_1_Heat_2 = true;
  ns_St_1_Heat_3 = true;
  p_St_1_Maintain = 300;
  i_St_1_Maintain = 2;
  nr_St_1_Maintain = false;
  ns_St_1_Maintain_1 = true;
  ns_St_1_Maintain_2 = true;
  ns_St_1_Maintain_3 = false;
  p_St_1_Reheat = 1000;
  i_St_1_Reheat = 3;
  nr_St_1_Reheat = false;
  ns_St_1_Reheat_1 = false;
  ns_St_1_Reheat_2 = false;
  ns_St_1_Reheat_3 = true;
  p_St_1_Standby = 0;
  i_St_1_Standby = 4;
  nr_St_1_Standby = false;
  ns_St_1_Standby_1 = false;
  ns_St_1_Standby_2 = false;
  ns_St_1_Standby_3 = false;
  v_161 = merge ck_2_3_1_1 (true -> p_St_1_Heat)(false -> p_St_1_Maintain);
  v_162 =
    merge ck_2_3_1_0
      (true -> 
        (((0 when true(ck_2_1)) when false(ck_2_2_1)) when true(ck_2_3_1_0)))
      (false -> p_St_1_Off);
  v_163 = merge ck_2_2_1 (true -> v_161)(false -> v_162);
  v_164 = merge ck_2_3_0_0 (true -> p_St_1_Reheat)(false -> p_St_1_Standby);
  v_165 =
    merge ck_2_2_0
      (true -> ((0 when false(ck_2_1)) when true(ck_2_2_0)))(false -> v_164);
  p = merge ck_2_1 (true -> v_163)(false -> v_165);
  v_166 = merge ck_2_3_1_1 (true -> i_St_1_Heat)(false -> i_St_1_Maintain);
  v_167 =
    merge ck_2_3_1_0
      (true -> 
        (((0 when true(ck_2_1)) when false(ck_2_2_1)) when true(ck_2_3_1_0)))
      (false -> i_St_1_Off);
  v_168 = merge ck_2_2_1 (true -> v_166)(false -> v_167);
  v_169 = merge ck_2_3_0_0 (true -> i_St_1_Reheat)(false -> i_St_1_Standby);
  v_170 =
    merge ck_2_2_0
      (true -> ((0 when false(ck_2_1)) when true(ck_2_2_0)))(false -> v_169);
  i = merge ck_2_1 (true -> v_168)(false -> v_170);
  v_171 =
    merge ck_2_3_1_1 (true -> ns_St_1_Heat_1)(false -> ns_St_1_Maintain_1);
  v_172 =
    merge ck_2_3_1_1 (true -> ns_St_1_Heat_2)(false -> ns_St_1_Maintain_2);
  v_173 =
    merge ck_2_3_1_1 (true -> ns_St_1_Heat_3)(false -> ns_St_1_Maintain_3);
  v_174 =
    merge ck_2_3_1_0
      (true -> 
        (((true when true(ck_2_1)) when false(ck_2_2_1))
          when true(ck_2_3_1_0)))
      (false -> ns_St_1_Off_1);
  v_175 =
    merge ck_2_3_1_0
      (true -> 
        (((true when true(ck_2_1)) when false(ck_2_2_1))
          when true(ck_2_3_1_0)))
      (false -> ns_St_1_Off_2);
  v_176 =
    merge ck_2_3_1_0
      (true -> 
        (((true when true(ck_2_1)) when false(ck_2_2_1))
          when true(ck_2_3_1_0)))
      (false -> ns_St_1_Off_3);
  v_177 =
    merge ck_2_3_0_0 (true -> ns_St_1_Reheat_1)(false -> ns_St_1_Standby_1);
  v_178 =
    merge ck_2_3_0_0 (true -> ns_St_1_Reheat_2)(false -> ns_St_1_Standby_2);
  v_179 =
    merge ck_2_3_0_0 (true -> ns_St_1_Reheat_3)(false -> ns_St_1_Standby_3);
  v_180 = merge ck_2_2_1 (true -> v_171)(false -> v_174);
  v_181 = merge ck_2_2_1 (true -> v_172)(false -> v_175);
  v_182 = merge ck_2_2_1 (true -> v_173)(false -> v_176);
  v_183 =
    merge ck_2_2_0
      (true -> ((true when false(ck_2_1)) when true(ck_2_2_0)))
      (false -> v_177);
  v_184 =
    merge ck_2_2_0
      (true -> ((true when false(ck_2_1)) when true(ck_2_2_0)))
      (false -> v_178);
  v_185 =
    merge ck_2_2_0
      (true -> ((true when false(ck_2_1)) when true(ck_2_2_0)))
      (false -> v_179);
  ns_1 = merge ck_2_1 (true -> v_180)(false -> v_183);
  ns_2 = merge ck_2_1 (true -> v_181)(false -> v_184);
  ns_3 = merge ck_2_1 (true -> v_182)(false -> v_185);
  v_186 = merge ck_2_3_1_1 (true -> nr_St_1_Heat)(false -> nr_St_1_Maintain);
  v_187 =
    merge ck_2_3_1_0
      (true -> 
        (((true when true(ck_2_1)) when false(ck_2_2_1))
          when true(ck_2_3_1_0)))
      (false -> nr_St_1_Off);
  v_188 = merge ck_2_2_1 (true -> v_186)(false -> v_187);
  v_189 = merge ck_2_3_0_0 (true -> nr_St_1_Reheat)(false -> nr_St_1_Standby);
  v_190 =
    merge ck_2_2_0
      (true -> ((true when false(ck_2_1)) when true(ck_2_2_0)))
      (false -> v_189);
  nr = merge ck_2_1 (true -> v_188)(false -> v_190);
  ck_2_3_1_1 = ((ck_2_3 when true(ck_2_1)) when true(ck_2_2_1));
  ck_2_3_1_0 = ((ck_2_3 when true(ck_2_1)) when false(ck_2_2_1));
  ck_2_2_1 = (ck_2_2 when true(ck_2_1));
  ck_2_3_0_1 = ((ck_2_3 when false(ck_2_1)) when true(ck_2_2_0));
  ck_2_3_0_0 = ((ck_2_3 when false(ck_2_1)) when false(ck_2_2_0));
  ck_2_2_0 = (ck_2_2 when false(ck_2_1));
  ns_St_1_Off_3_1_1 =
    ((ns_St_1_Off_3 when true(ns_St_1_Off_1)) when true(ns_St_1_Off_2_1));
  ns_St_1_Off_3_1_0 =
    ((ns_St_1_Off_3 when true(ns_St_1_Off_1)) when false(ns_St_1_Off_2_1));
  ns_St_1_Off_2_1 = (ns_St_1_Off_2 when true(ns_St_1_Off_1));
  ns_St_1_Off_3_0_1 =
    ((ns_St_1_Off_3 when false(ns_St_1_Off_1)) when true(ns_St_1_Off_2_0));
  ns_St_1_Off_3_0_0 =
    ((ns_St_1_Off_3 when false(ns_St_1_Off_1)) when false(ns_St_1_Off_2_0));
  ns_St_1_Off_2_0 = (ns_St_1_Off_2 when false(ns_St_1_Off_1));
  ns_St_1_Heat_3_1_1 =
    ((ns_St_1_Heat_3 when true(ns_St_1_Heat_1)) when true(ns_St_1_Heat_2_1));
  ns_St_1_Heat_3_1_0 =
    ((ns_St_1_Heat_3 when true(ns_St_1_Heat_1)) when false(ns_St_1_Heat_2_1));
  ns_St_1_Heat_2_1 = (ns_St_1_Heat_2 when true(ns_St_1_Heat_1));
  ns_St_1_Heat_3_0_1 =
    ((ns_St_1_Heat_3 when false(ns_St_1_Heat_1)) when true(ns_St_1_Heat_2_0));
  ns_St_1_Heat_3_0_0 =
    ((ns_St_1_Heat_3 when false(ns_St_1_Heat_1))
      when false(ns_St_1_Heat_2_0));
  ns_St_1_Heat_2_0 = (ns_St_1_Heat_2 when false(ns_St_1_Heat_1));
  ns_St_1_Maintain_3_1_1 =
    ((ns_St_1_Maintain_3 when true(ns_St_1_Maintain_1))
      when true(ns_St_1_Maintain_2_1));
  ns_St_1_Maintain_3_1_0 =
    ((ns_St_1_Maintain_3 when true(ns_St_1_Maintain_1))
      when false(ns_St_1_Maintain_2_1));
  ns_St_1_Maintain_2_1 = (ns_St_1_Maintain_2 when true(ns_St_1_Maintain_1));
  ns_St_1_Maintain_3_0_1 =
    ((ns_St_1_Maintain_3 when false(ns_St_1_Maintain_1))
      when true(ns_St_1_Maintain_2_0));
  ns_St_1_Maintain_3_0_0 =
    ((ns_St_1_Maintain_3 when false(ns_St_1_Maintain_1))
      when false(ns_St_1_Maintain_2_0));
  ns_St_1_Maintain_2_0 = (ns_St_1_Maintain_2 when false(ns_St_1_Maintain_1));
  ns_St_1_Reheat_3_1_1 =
    ((ns_St_1_Reheat_3 when true(ns_St_1_Reheat_1))
      when true(ns_St_1_Reheat_2_1));
  ns_St_1_Reheat_3_1_0 =
    ((ns_St_1_Reheat_3 when true(ns_St_1_Reheat_1))
      when false(ns_St_1_Reheat_2_1));
  ns_St_1_Reheat_2_1 = (ns_St_1_Reheat_2 when true(ns_St_1_Reheat_1));
  ns_St_1_Reheat_3_0_1 =
    ((ns_St_1_Reheat_3 when false(ns_St_1_Reheat_1))
      when true(ns_St_1_Reheat_2_0));
  ns_St_1_Reheat_3_0_0 =
    ((ns_St_1_Reheat_3 when false(ns_St_1_Reheat_1))
      when false(ns_St_1_Reheat_2_0));
  ns_St_1_Reheat_2_0 = (ns_St_1_Reheat_2 when false(ns_St_1_Reheat_1));
  ns_St_1_Standby_3_1_1 =
    ((ns_St_1_Standby_3 when true(ns_St_1_Standby_1))
      when true(ns_St_1_Standby_2_1));
  ns_St_1_Standby_3_1_0 =
    ((ns_St_1_Standby_3 when true(ns_St_1_Standby_1))
      when false(ns_St_1_Standby_2_1));
  ns_St_1_Standby_2_1 = (ns_St_1_Standby_2 when true(ns_St_1_Standby_1));
  ns_St_1_Standby_3_0_1 =
    ((ns_St_1_Standby_3 when false(ns_St_1_Standby_1))
      when true(ns_St_1_Standby_2_0));
  ns_St_1_Standby_3_0_0 =
    ((ns_St_1_Standby_3 when false(ns_St_1_Standby_1))
      when false(ns_St_1_Standby_2_0));
  ns_St_1_Standby_2_0 = (ns_St_1_Standby_2 when false(ns_St_1_Standby_1));
  v_191 = true fby ns_1;
  v_192 = false fby ns_2;
  v_193 = false fby ns_3;
  ck_1 = v_191;
  ck_2_4 = v_192;
  ck_3 = v_193;
  r_St_1_Off = if v_11 then true else v_15;
  s_3_St_1_Off_1 = if v_11 then true else v_14_1;
  s_3_St_1_Off_2 = if v_11 then true else v_14_2;
  s_3_St_1_Off_3 = if v_11 then true else v_14_3;
  v_15 =
    if v_13
    then true
    else (((pnr when true(ck_1)) when false(ck_2_4_1)) when false(ck_3_1_0));
  v_14_1 = if v_13 then false else true;
  v_14_2 = if v_13 then false else false;
  v_14_3 = if v_13 then false else false;
  v_13 =
    ((((s when true(ck_1)) when false(ck_2_4_1)) when false(ck_3_1_0)) &
     v_12);
  v_12 =
    not((((c when true(ck_1)) when false(ck_2_4_1)) when false(ck_3_1_0)));
  v_11 =
    ((((s when true(ck_1)) when false(ck_2_4_1)) when false(ck_3_1_0)) &
     (((c when true(ck_1)) when false(ck_2_4_1)) when false(ck_3_1_0)));
  v_14_3_1_1 = ((v_14_3 when true(v_14_1)) when true(v_14_2_1));
  v_14_3_1_0 = ((v_14_3 when true(v_14_1)) when false(v_14_2_1));
  v_14_2_1 = (v_14_2 when true(v_14_1));
  v_14_3_0_1 = ((v_14_3 when false(v_14_1)) when true(v_14_2_0));
  v_14_3_0_0 = ((v_14_3 when false(v_14_1)) when false(v_14_2_0));
  v_14_2_0 = (v_14_2 when false(v_14_1));
  r_St_1_Heat =
    if (((tok when true(ck_1)) when true(ck_2_4_1)) when true(ck_3_1_1))
    then true
    else v_10;
  s_3_St_1_Heat_1 =
    if (((tok when true(ck_1)) when true(ck_2_4_1)) when true(ck_3_1_1))
    then true
    else v_9_1;
  s_3_St_1_Heat_2 =
    if (((tok when true(ck_1)) when true(ck_2_4_1)) when true(ck_3_1_1))
    then true
    else v_9_2;
  s_3_St_1_Heat_3 =
    if (((tok when true(ck_1)) when true(ck_2_4_1)) when true(ck_3_1_1))
    then false
    else v_9_3;
  v_10 =
    if (((f when true(ck_1)) when true(ck_2_4_1)) when true(ck_3_1_1))
    then true
    else (((pnr when true(ck_1)) when true(ck_2_4_1)) when true(ck_3_1_1));
  v_9_1 =
    if (((f when true(ck_1)) when true(ck_2_4_1)) when true(ck_3_1_1))
    then true
    else true;
  v_9_2 =
    if (((f when true(ck_1)) when true(ck_2_4_1)) when true(ck_3_1_1))
    then false
    else true;
  v_9_3 =
    if (((f when true(ck_1)) when true(ck_2_4_1)) when true(ck_3_1_1))
    then false
    else true;
  v_9_3_1_1 = ((v_9_3 when true(v_9_1)) when true(v_9_2_1));
  v_9_3_1_0 = ((v_9_3 when true(v_9_1)) when false(v_9_2_1));
  v_9_2_1 = (v_9_2 when true(v_9_1));
  v_9_3_0_1 = ((v_9_3 when false(v_9_1)) when true(v_9_2_0));
  v_9_3_0_0 = ((v_9_3 when false(v_9_1)) when false(v_9_2_0));
  v_9_2_0 = (v_9_2 when false(v_9_1));
  r_St_1_Maintain = if v_6 then true else v_8;
  s_3_St_1_Maintain_1 = if v_6 then false else v_7_1;
  s_3_St_1_Maintain_2 = if v_6 then false else v_7_2;
  s_3_St_1_Maintain_3 = if v_6 then true else v_7_3;
  v_8 =
    if (((f when true(ck_1)) when true(ck_2_4_1)) when false(ck_3_1_1))
    then true
    else (((pnr when true(ck_1)) when true(ck_2_4_1)) when false(ck_3_1_1));
  v_7_1 =
    if (((f when true(ck_1)) when true(ck_2_4_1)) when false(ck_3_1_1))
    then true
    else true;
  v_7_2 =
    if (((f when true(ck_1)) when true(ck_2_4_1)) when false(ck_3_1_1))
    then false
    else true;
  v_7_3 =
    if (((f when true(ck_1)) when true(ck_2_4_1)) when false(ck_3_1_1))
    then false
    else false;
  v_6 =
    ((((cold when true(ck_1)) when true(ck_2_4_1)) when false(ck_3_1_1)) &
     (((c when true(ck_1)) when true(ck_2_4_1)) when false(ck_3_1_1)));
  v_7_3_1_1 = ((v_7_3 when true(v_7_1)) when true(v_7_2_1));
  v_7_3_1_0 = ((v_7_3 when true(v_7_1)) when false(v_7_2_1));
  v_7_2_1 = (v_7_2 when true(v_7_1));
  v_7_3_0_1 = ((v_7_3 when false(v_7_1)) when true(v_7_2_0));
  v_7_3_0_0 = ((v_7_3 when false(v_7_1)) when false(v_7_2_0));
  v_7_2_0 = (v_7_2 when false(v_7_1));
  r_St_1_Reheat =
    if (((tok when false(ck_1)) when false(ck_2_4_0)) when true(ck_3_0_0))
    then true
    else v_5;
  s_3_St_1_Reheat_1 =
    if (((tok when false(ck_1)) when false(ck_2_4_0)) when true(ck_3_0_0))
    then true
    else v_1;
  s_3_St_1_Reheat_2 =
    if (((tok when false(ck_1)) when false(ck_2_4_0)) when true(ck_3_0_0))
    then true
    else v_2;
  s_3_St_1_Reheat_3 =
    if (((tok when false(ck_1)) when false(ck_2_4_0)) when true(ck_3_0_0))
    then false
    else v_3;
  v_5 =
    if (((f when false(ck_1)) when false(ck_2_4_0)) when true(ck_3_0_0))
    then true
    else (((pnr when false(ck_1)) when false(ck_2_4_0)) when true(ck_3_0_0));
  v_1 =
    if (((f when false(ck_1)) when false(ck_2_4_0)) when true(ck_3_0_0))
    then true
    else false;
  v_2 =
    if (((f when false(ck_1)) when false(ck_2_4_0)) when true(ck_3_0_0))
    then false
    else false;
  v_3 =
    if (((f when false(ck_1)) when false(ck_2_4_0)) when true(ck_3_0_0))
    then false
    else true;
  v_3_1_1 = ((v_3 when true(v_1)) when true(v_2_1));
  v_3_1_0 = ((v_3 when true(v_1)) when false(v_2_1));
  v_2_1 = (v_2 when true(v_1));
  v_3_0_1 = ((v_3 when false(v_1)) when true(v_2_0));
  v_3_0_0 = ((v_3 when false(v_1)) when false(v_2_0));
  v_2_0 = (v_2 when false(v_1));
  r_St_1_Standby =
    if (((c when false(ck_1)) when false(ck_2_4_0)) when false(ck_3_0_0))
    then true
    else (((pnr when false(ck_1)) when false(ck_2_4_0)) when false(ck_3_0_0));
  s_3_St_1_Standby_1 =
    if (((c when false(ck_1)) when false(ck_2_4_0)) when false(ck_3_0_0))
    then true
    else false;
  s_3_St_1_Standby_2 =
    if (((c when false(ck_1)) when false(ck_2_4_0)) when false(ck_3_0_0))
    then true
    else false;
  s_3_St_1_Standby_3 =
    if (((c when false(ck_1)) when false(ck_2_4_0)) when false(ck_3_0_0))
    then true
    else false;
  v_194 =
    merge ck_3_1_1 (true -> s_3_St_1_Heat_1)(false -> s_3_St_1_Maintain_1);
  v_195 =
    merge ck_3_1_1 (true -> s_3_St_1_Heat_2)(false -> s_3_St_1_Maintain_2);
  v_196 =
    merge ck_3_1_1 (true -> s_3_St_1_Heat_3)(false -> s_3_St_1_Maintain_3);
  v_197 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_4_1)) when true(ck_3_1_0)))
      (false -> s_3_St_1_Off_1);
  v_198 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_4_1)) when true(ck_3_1_0)))
      (false -> s_3_St_1_Off_2);
  v_199 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_4_1)) when true(ck_3_1_0)))
      (false -> s_3_St_1_Off_3);
  v_200 =
    merge ck_3_0_0 (true -> s_3_St_1_Reheat_1)(false -> s_3_St_1_Standby_1);
  v_201 =
    merge ck_3_0_0 (true -> s_3_St_1_Reheat_2)(false -> s_3_St_1_Standby_2);
  v_202 =
    merge ck_3_0_0 (true -> s_3_St_1_Reheat_3)(false -> s_3_St_1_Standby_3);
  v_203 = merge ck_2_4_1 (true -> v_194)(false -> v_197);
  v_204 = merge ck_2_4_1 (true -> v_195)(false -> v_198);
  v_205 = merge ck_2_4_1 (true -> v_196)(false -> v_199);
  v_206 =
    merge ck_2_4_0
      (true -> ((true when false(ck_1)) when true(ck_2_4_0)))(false -> v_200);
  v_207 =
    merge ck_2_4_0
      (true -> ((true when false(ck_1)) when true(ck_2_4_0)))(false -> v_201);
  v_208 =
    merge ck_2_4_0
      (true -> ((true when false(ck_1)) when true(ck_2_4_0)))(false -> v_202);
  s_3_1 = merge ck_1 (true -> v_203)(false -> v_206);
  s_3_2 = merge ck_1 (true -> v_204)(false -> v_207);
  s_3_3 = merge ck_1 (true -> v_205)(false -> v_208);
  v_209 = merge ck_3_1_1 (true -> r_St_1_Heat)(false -> r_St_1_Maintain);
  v_210 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_4_1)) when true(ck_3_1_0)))
      (false -> r_St_1_Off);
  v_211 = merge ck_2_4_1 (true -> v_209)(false -> v_210);
  v_212 = merge ck_3_0_0 (true -> r_St_1_Reheat)(false -> r_St_1_Standby);
  v_213 =
    merge ck_2_4_0
      (true -> ((true when false(ck_1)) when true(ck_2_4_0)))(false -> v_212);
  r = merge ck_1 (true -> v_211)(false -> v_213);
  ck_3_1_1 = ((ck_3 when true(ck_1)) when true(ck_2_4_1));
  ck_3_1_0 = ((ck_3 when true(ck_1)) when false(ck_2_4_1));
  ck_2_4_1 = (ck_2_4 when true(ck_1));
  ck_3_0_1 = ((ck_3 when false(ck_1)) when true(ck_2_4_0));
  ck_3_0_0 = ((ck_3 when false(ck_1)) when false(ck_2_4_0));
  ck_2_4_0 = (ck_2_4 when false(ck_1));
  s_3_St_1_Off_3_1_1 =
    ((s_3_St_1_Off_3 when true(s_3_St_1_Off_1)) when true(s_3_St_1_Off_2_1));
  s_3_St_1_Off_3_1_0 =
    ((s_3_St_1_Off_3 when true(s_3_St_1_Off_1)) when false(s_3_St_1_Off_2_1));
  s_3_St_1_Off_2_1 = (s_3_St_1_Off_2 when true(s_3_St_1_Off_1));
  s_3_St_1_Off_3_0_1 =
    ((s_3_St_1_Off_3 when false(s_3_St_1_Off_1)) when true(s_3_St_1_Off_2_0));
  s_3_St_1_Off_3_0_0 =
    ((s_3_St_1_Off_3 when false(s_3_St_1_Off_1))
      when false(s_3_St_1_Off_2_0));
  s_3_St_1_Off_2_0 = (s_3_St_1_Off_2 when false(s_3_St_1_Off_1));
  s_3_St_1_Heat_3_1_1 =
    ((s_3_St_1_Heat_3 when true(s_3_St_1_Heat_1))
      when true(s_3_St_1_Heat_2_1));
  s_3_St_1_Heat_3_1_0 =
    ((s_3_St_1_Heat_3 when true(s_3_St_1_Heat_1))
      when false(s_3_St_1_Heat_2_1));
  s_3_St_1_Heat_2_1 = (s_3_St_1_Heat_2 when true(s_3_St_1_Heat_1));
  s_3_St_1_Heat_3_0_1 =
    ((s_3_St_1_Heat_3 when false(s_3_St_1_Heat_1))
      when true(s_3_St_1_Heat_2_0));
  s_3_St_1_Heat_3_0_0 =
    ((s_3_St_1_Heat_3 when false(s_3_St_1_Heat_1))
      when false(s_3_St_1_Heat_2_0));
  s_3_St_1_Heat_2_0 = (s_3_St_1_Heat_2 when false(s_3_St_1_Heat_1));
  s_3_St_1_Maintain_3_1_1 =
    ((s_3_St_1_Maintain_3 when true(s_3_St_1_Maintain_1))
      when true(s_3_St_1_Maintain_2_1));
  s_3_St_1_Maintain_3_1_0 =
    ((s_3_St_1_Maintain_3 when true(s_3_St_1_Maintain_1))
      when false(s_3_St_1_Maintain_2_1));
  s_3_St_1_Maintain_2_1 =
    (s_3_St_1_Maintain_2 when true(s_3_St_1_Maintain_1));
  s_3_St_1_Maintain_3_0_1 =
    ((s_3_St_1_Maintain_3 when false(s_3_St_1_Maintain_1))
      when true(s_3_St_1_Maintain_2_0));
  s_3_St_1_Maintain_3_0_0 =
    ((s_3_St_1_Maintain_3 when false(s_3_St_1_Maintain_1))
      when false(s_3_St_1_Maintain_2_0));
  s_3_St_1_Maintain_2_0 =
    (s_3_St_1_Maintain_2 when false(s_3_St_1_Maintain_1));
  s_3_St_1_Reheat_3_1_1 =
    ((s_3_St_1_Reheat_3 when true(s_3_St_1_Reheat_1))
      when true(s_3_St_1_Reheat_2_1));
  s_3_St_1_Reheat_3_1_0 =
    ((s_3_St_1_Reheat_3 when true(s_3_St_1_Reheat_1))
      when false(s_3_St_1_Reheat_2_1));
  s_3_St_1_Reheat_2_1 = (s_3_St_1_Reheat_2 when true(s_3_St_1_Reheat_1));
  s_3_St_1_Reheat_3_0_1 =
    ((s_3_St_1_Reheat_3 when false(s_3_St_1_Reheat_1))
      when true(s_3_St_1_Reheat_2_0));
  s_3_St_1_Reheat_3_0_0 =
    ((s_3_St_1_Reheat_3 when false(s_3_St_1_Reheat_1))
      when false(s_3_St_1_Reheat_2_0));
  s_3_St_1_Reheat_2_0 = (s_3_St_1_Reheat_2 when false(s_3_St_1_Reheat_1));
  s_3_St_1_Standby_3_1_1 =
    ((s_3_St_1_Standby_3 when true(s_3_St_1_Standby_1))
      when true(s_3_St_1_Standby_2_1));
  s_3_St_1_Standby_3_1_0 =
    ((s_3_St_1_Standby_3 when true(s_3_St_1_Standby_1))
      when false(s_3_St_1_Standby_2_1));
  s_3_St_1_Standby_2_1 = (s_3_St_1_Standby_2 when true(s_3_St_1_Standby_1));
  s_3_St_1_Standby_3_0_1 =
    ((s_3_St_1_Standby_3 when false(s_3_St_1_Standby_1))
      when true(s_3_St_1_Standby_2_0));
  s_3_St_1_Standby_3_0_0 =
    ((s_3_St_1_Standby_3 when false(s_3_St_1_Standby_1))
      when false(s_3_St_1_Standby_2_0));
  s_3_St_1_Standby_2_0 = (s_3_St_1_Standby_2 when false(s_3_St_1_Standby_1));
  ns_3_1_1 = ((ns_3 when true(ns_1)) when true(ns_2_1));
  ns_3_1_0 = ((ns_3 when true(ns_1)) when false(ns_2_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_3_0_1 = ((ns_3 when false(ns_1)) when true(ns_2_0));
  ns_3_0_0 = ((ns_3 when false(ns_1)) when false(ns_2_0));
  ns_2_0 = (ns_2 when false(ns_1));
  s_3_3_1_1 = ((s_3_3 when true(s_3_1)) when true(s_3_2_1));
  s_3_3_1_0 = ((s_3_3 when true(s_3_1)) when false(s_3_2_1));
  s_3_2_1 = (s_3_2 when true(s_3_1));
  s_3_3_0_1 = ((s_3_3 when false(s_3_1)) when true(s_3_2_0));
  s_3_3_0_0 = ((s_3_3 when false(s_3_1)) when false(s_3_2_0));
  s_3_2_0 = (s_3_2 when false(s_3_1))
tel

node rad(up1 : bool; down1 : bool; up2 : bool; down2 : bool; c1 : bool;
          c2 : bool)
returns (p : int; i : int)
var v_223 : bool; v_222 : bool; v_221 : bool; v_220 : bool; v_219 : bool;
    v_218 : bool; v_217 : int; v_216 : int; v_215 : int; v_214 : int;
    ns_St_2_High_2_0 : bool; ns_St_2_High_2_1 : bool; ns_St_2_Eco_2_0 : bool;
    ns_St_2_Eco_2_1 : bool; ns_St_2_Frostprotection_2_0 : bool;
    ns_St_2_Frostprotection_2_1 : bool; ns_St_2_Off_2_0 : bool;
    ns_St_2_Off_2_1 : bool; ck_3_2_0 : bool; ck_3_2_1 : bool;
    nr_St_2_High : bool; ns_St_2_High_2 : bool; ns_St_2_High_1 : bool;
    i_St_2_High : int; p_St_2_High : int; nr_St_2_Eco : bool;
    ns_St_2_Eco_2 : bool; ns_St_2_Eco_1 : bool; i_St_2_Eco : int;
    p_St_2_Eco : int; nr_St_2_Frostprotection : bool;
    ns_St_2_Frostprotection_2 : bool; ns_St_2_Frostprotection_1 : bool;
    i_St_2_Frostprotection : int; p_St_2_Frostprotection : int;
    nr_St_2_Off : bool; ns_St_2_Off_2 : bool; ns_St_2_Off_1 : bool;
    i_St_2_Off : int; p_St_2_Off : int; ck_3_2 : bool; ck_3_1 : bool;
    v_35 : bool; v_34 : bool; v_32_2_0 : bool; v_32_2_1 : bool;
    v_30_2_0 : bool; v_30_2_1 : bool; v_33 : bool; v_32_2 : bool;
    v_32_1 : bool; v_31 : bool; v_30_2 : bool; v_30_1 : bool; v_29 : bool;
    v_28 : bool; v_27 : bool; v_26 : bool; v_24_2_0 : bool; v_24_2_1 : bool;
    v_25 : bool; v_24_2 : bool; v_24_1 : bool; v_23 : bool; v_22 : bool;
    v_21 : bool; v_19_2_0 : bool; v_19_2_1 : bool; v_20 : bool;
    v_19_2 : bool; v_19_1 : bool; v_18 : bool; v_17 : bool; v_16 : bool;
    v : bool; v_231 : bool; v_230 : bool; v_229 : bool; v_228 : bool;
    v_227 : bool; v_226 : bool; v_225 : bool; v_224 : bool;
    s_St_2_High_2_0 : bool; s_St_2_High_2_1 : bool; s_St_2_Eco_2_0 : bool;
    s_St_2_Eco_2_1 : bool; s_St_2_Frostprotection_2_0 : bool;
    s_St_2_Frostprotection_2_1 : bool; s_St_2_Off_2_0 : bool;
    s_St_2_Off_2_1 : bool; ck_2_0 : bool; ck_2_1 : bool; r_St_2_High : bool;
    s_St_2_High_2 : bool; s_St_2_High_1 : bool; r_St_2_Eco : bool;
    s_St_2_Eco_2 : bool; s_St_2_Eco_1 : bool; r_St_2_Frostprotection : bool;
    s_St_2_Frostprotection_2 : bool; s_St_2_Frostprotection_1 : bool;
    r_St_2_Off : bool; s_St_2_Off_2 : bool; s_St_2_Off_1 : bool; ck_2 : bool;
    ck_1 : bool; s_2_0 : bool; s_2_1 : bool; ns_2_0 : bool; ns_2_1 : bool;
    s_2 : bool; s_1 : bool; ns_2 : bool; ns_1 : bool; r : bool; nr : bool;
    pnr : bool;
let
  pnr = false fby nr;
  ck_3_1 = s_1;
  ck_3_2 = s_2;
  p_St_2_Off = 0;
  i_St_2_Off = 0;
  nr_St_2_Off = false;
  ns_St_2_Off_1 = false;
  ns_St_2_Off_2 = false;
  p_St_2_Frostprotection = 300;
  i_St_2_Frostprotection = 1;
  nr_St_2_Frostprotection = false;
  ns_St_2_Frostprotection_1 = true;
  ns_St_2_Frostprotection_2 = false;
  p_St_2_Eco = 1500;
  i_St_2_Eco = 2;
  nr_St_2_Eco = false;
  ns_St_2_Eco_1 = true;
  ns_St_2_Eco_2 = true;
  p_St_2_High = 2000;
  i_St_2_High = 3;
  nr_St_2_High = false;
  ns_St_2_High_1 = false;
  ns_St_2_High_2 = true;
  v_214 =
    merge ck_3_2_1 (true -> p_St_2_Eco)(false -> p_St_2_Frostprotection);
  v_215 = merge ck_3_2_0 (true -> p_St_2_High)(false -> p_St_2_Off);
  p = merge ck_3_1 (true -> v_214)(false -> v_215);
  v_216 =
    merge ck_3_2_1 (true -> i_St_2_Eco)(false -> i_St_2_Frostprotection);
  v_217 = merge ck_3_2_0 (true -> i_St_2_High)(false -> i_St_2_Off);
  i = merge ck_3_1 (true -> v_216)(false -> v_217);
  v_218 =
    merge ck_3_2_1
      (true -> ns_St_2_Eco_1)(false -> ns_St_2_Frostprotection_1);
  v_219 =
    merge ck_3_2_1
      (true -> ns_St_2_Eco_2)(false -> ns_St_2_Frostprotection_2);
  v_220 = merge ck_3_2_0 (true -> ns_St_2_High_1)(false -> ns_St_2_Off_1);
  v_221 = merge ck_3_2_0 (true -> ns_St_2_High_2)(false -> ns_St_2_Off_2);
  ns_1 = merge ck_3_1 (true -> v_218)(false -> v_220);
  ns_2 = merge ck_3_1 (true -> v_219)(false -> v_221);
  v_222 =
    merge ck_3_2_1 (true -> nr_St_2_Eco)(false -> nr_St_2_Frostprotection);
  v_223 = merge ck_3_2_0 (true -> nr_St_2_High)(false -> nr_St_2_Off);
  nr = merge ck_3_1 (true -> v_222)(false -> v_223);
  ck_3_2_1 = (ck_3_2 when true(ck_3_1));
  ck_3_2_0 = (ck_3_2 when false(ck_3_1));
  ns_St_2_Off_2_1 = (ns_St_2_Off_2 when true(ns_St_2_Off_1));
  ns_St_2_Off_2_0 = (ns_St_2_Off_2 when false(ns_St_2_Off_1));
  ns_St_2_Frostprotection_2_1 =
    (ns_St_2_Frostprotection_2 when true(ns_St_2_Frostprotection_1));
  ns_St_2_Frostprotection_2_0 =
    (ns_St_2_Frostprotection_2 when false(ns_St_2_Frostprotection_1));
  ns_St_2_Eco_2_1 = (ns_St_2_Eco_2 when true(ns_St_2_Eco_1));
  ns_St_2_Eco_2_0 = (ns_St_2_Eco_2 when false(ns_St_2_Eco_1));
  ns_St_2_High_2_1 = (ns_St_2_High_2 when true(ns_St_2_High_1));
  ns_St_2_High_2_0 = (ns_St_2_High_2 when false(ns_St_2_High_1));
  v_224 = false fby ns_1;
  v_225 = false fby ns_2;
  ck_1 = v_224;
  ck_2 = v_225;
  r_St_2_Off =
    if v_35 then true else ((pnr when false(ck_1)) when false(ck_2_0));
  s_St_2_Off_1 = if v_35 then true else false;
  s_St_2_Off_2 = if v_35 then false else false;
  v_35 = (((up1 when false(ck_1)) when false(ck_2_0)) or v_34);
  v_34 = not(((c1 when false(ck_1)) when false(ck_2_0)));
  r_St_2_Frostprotection = if v_26 then true else v_33;
  s_St_2_Frostprotection_1 = if v_26 then true else v_32_1;
  s_St_2_Frostprotection_2 = if v_26 then true else v_32_2;
  v_33 = if v_27 then true else v_31;
  v_32_1 = if v_27 then false else v_30_1;
  v_32_2 = if v_27 then true else v_30_2;
  v_31 = if v_29 then true else ((pnr when true(ck_1)) when false(ck_2_1));
  v_30_1 = if v_29 then false else true;
  v_30_2 = if v_29 then false else false;
  v_29 = (((down1 when true(ck_1)) when false(ck_2_1)) or v_28);
  v_28 = not(((c1 when true(ck_1)) when false(ck_2_1)));
  v_27 =
    (((up2 when true(ck_1)) when false(ck_2_1)) &
     ((c2 when true(ck_1)) when false(ck_2_1)));
  v_26 =
    (((up1 when true(ck_1)) when false(ck_2_1)) &
     ((c1 when true(ck_1)) when false(ck_2_1)));
  v_30_2_1 = (v_30_2 when true(v_30_1));
  v_30_2_0 = (v_30_2 when false(v_30_1));
  v_32_2_1 = (v_32_2 when true(v_32_1));
  v_32_2_0 = (v_32_2 when false(v_32_1));
  r_St_2_Eco = if v_22 then true else v_25;
  s_St_2_Eco_1 = if v_22 then true else v_24_1;
  s_St_2_Eco_2 = if v_22 then false else v_24_2;
  v_25 = if v_23 then true else ((pnr when true(ck_1)) when true(ck_2_1));
  v_24_1 = if v_23 then false else true;
  v_24_2 = if v_23 then true else true;
  v_23 =
    (((up2 when true(ck_1)) when true(ck_2_1)) &
     ((c2 when true(ck_1)) when true(ck_2_1)));
  v_22 = (((down1 when true(ck_1)) when true(ck_2_1)) or v_21);
  v_21 = not(((c1 when true(ck_1)) when true(ck_2_1)));
  v_24_2_1 = (v_24_2 when true(v_24_1));
  v_24_2_0 = (v_24_2 when false(v_24_1));
  r_St_2_High = if v_16 then true else v_20;
  s_St_2_High_1 = if v_16 then true else v_19_1;
  s_St_2_High_2 = if v_16 then true else v_19_2;
  v_20 = if v_18 then true else ((pnr when false(ck_1)) when true(ck_2_0));
  v_19_1 = if v_18 then true else false;
  v_19_2 = if v_18 then false else true;
  v_18 = (((down2 when false(ck_1)) when true(ck_2_0)) or v_17);
  v_17 = not(((c2 when false(ck_1)) when true(ck_2_0)));
  v_16 = (((down1 when false(ck_1)) when true(ck_2_0)) or v);
  v = not(((c1 when false(ck_1)) when true(ck_2_0)));
  v_19_2_1 = (v_19_2 when true(v_19_1));
  v_19_2_0 = (v_19_2 when false(v_19_1));
  v_226 =
    merge ck_2_1 (true -> s_St_2_Eco_1)(false -> s_St_2_Frostprotection_1);
  v_227 =
    merge ck_2_1 (true -> s_St_2_Eco_2)(false -> s_St_2_Frostprotection_2);
  v_228 = merge ck_2_0 (true -> s_St_2_High_1)(false -> s_St_2_Off_1);
  v_229 = merge ck_2_0 (true -> s_St_2_High_2)(false -> s_St_2_Off_2);
  s_1 = merge ck_1 (true -> v_226)(false -> v_228);
  s_2 = merge ck_1 (true -> v_227)(false -> v_229);
  v_230 = merge ck_2_1 (true -> r_St_2_Eco)(false -> r_St_2_Frostprotection);
  v_231 = merge ck_2_0 (true -> r_St_2_High)(false -> r_St_2_Off);
  r = merge ck_1 (true -> v_230)(false -> v_231);
  ck_2_1 = (ck_2 when true(ck_1));
  ck_2_0 = (ck_2 when false(ck_1));
  s_St_2_Off_2_1 = (s_St_2_Off_2 when true(s_St_2_Off_1));
  s_St_2_Off_2_0 = (s_St_2_Off_2 when false(s_St_2_Off_1));
  s_St_2_Frostprotection_2_1 =
    (s_St_2_Frostprotection_2 when true(s_St_2_Frostprotection_1));
  s_St_2_Frostprotection_2_0 =
    (s_St_2_Frostprotection_2 when false(s_St_2_Frostprotection_1));
  s_St_2_Eco_2_1 = (s_St_2_Eco_2 when true(s_St_2_Eco_1));
  s_St_2_Eco_2_0 = (s_St_2_Eco_2 when false(s_St_2_Eco_1));
  s_St_2_High_2_1 = (s_St_2_High_2 when true(s_St_2_High_1));
  s_St_2_High_2_0 = (s_St_2_High_2 when false(s_St_2_High_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_2_0 = (ns_2 when false(ns_1));
  s_2_1 = (s_2 when true(s_1));
  s_2_0 = (s_2 when false(s_1))
tel

node door(push : bool; c_door : bool) returns (door_open : bool)
var nr_St_3_Open : bool; ns_St_3_Open_1 : bool; door_open_St_3_Open : bool;
    nr_St_3_Closed : bool; ns_St_3_Closed_1 : bool;
    door_open_St_3_Closed : bool; ck_4_1 : bool; v_37 : bool; v_36 : bool;
    v : bool; r_St_3_Open : bool; s_St_3_Open_1 : bool; r_St_3_Closed : bool;
    s_St_3_Closed_1 : bool; ck_1 : bool; s_1 : bool; ns_1 : bool; r : bool;
    nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_4_1 = s_1;
  door_open_St_3_Closed = false;
  nr_St_3_Closed = false;
  ns_St_3_Closed_1 = true;
  door_open_St_3_Open = true;
  nr_St_3_Open = false;
  ns_St_3_Open_1 = false;
  door_open =
    merge ck_4_1
      (true -> door_open_St_3_Closed)(false -> door_open_St_3_Open);
  ns_1 = merge ck_4_1 (true -> ns_St_3_Closed_1)(false -> ns_St_3_Open_1);
  nr = merge ck_4_1 (true -> nr_St_3_Closed)(false -> nr_St_3_Open);
  ck_1 = true fby ns_1;
  r_St_3_Closed = if v_37 then true else (pnr when true(ck_1));
  s_St_3_Closed_1 = if v_37 then false else true;
  v_37 = ((push when true(ck_1)) & (c_door when true(ck_1)));
  r_St_3_Open = if v_36 then true else (pnr when false(ck_1));
  s_St_3_Open_1 = if v_36 then true else false;
  v_36 = ((push when false(ck_1)) or v);
  v = not((c_door when false(ck_1)));
  s_1 = merge ck_1 (true -> s_St_3_Closed_1)(false -> s_St_3_Open_1);
  r = merge ck_1 (true -> r_St_3_Closed)(false -> r_St_3_Open)
tel

node room(presence : bool) returns (room_oc : bool)
var nr_St_4_Ocupied : bool; ns_St_4_Ocupied_1 : bool;
    room_oc_St_4_Ocupied : bool; nr_St_4_Empty : bool;
    ns_St_4_Empty_1 : bool; room_oc_St_4_Empty : bool; ck_5_1 : bool;
    v : bool; r_St_4_Ocupied : bool; s_St_4_Ocupied_1 : bool;
    r_St_4_Empty : bool; s_St_4_Empty_1 : bool; ck_1 : bool; s_1 : bool;
    ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_5_1 = s_1;
  room_oc_St_4_Empty = false;
  nr_St_4_Empty = false;
  ns_St_4_Empty_1 = true;
  room_oc_St_4_Ocupied = true;
  nr_St_4_Ocupied = false;
  ns_St_4_Ocupied_1 = false;
  room_oc =
    merge ck_5_1 (true -> room_oc_St_4_Empty)(false -> room_oc_St_4_Ocupied);
  ns_1 = merge ck_5_1 (true -> ns_St_4_Empty_1)(false -> ns_St_4_Ocupied_1);
  nr = merge ck_5_1 (true -> nr_St_4_Empty)(false -> nr_St_4_Ocupied);
  ck_1 = true fby ns_1;
  r_St_4_Empty =
    if (presence when true(ck_1)) then true else (pnr when true(ck_1));
  s_St_4_Empty_1 = if (presence when true(ck_1)) then false else true;
  r_St_4_Ocupied = if v then true else (pnr when false(ck_1));
  s_St_4_Ocupied_1 = if v then true else false;
  v = not((presence when false(ck_1)));
  s_1 = merge ck_1 (true -> s_St_4_Empty_1)(false -> s_St_4_Ocupied_1);
  r = merge ck_1 (true -> r_St_4_Empty)(false -> r_St_4_Ocupied)
tel

node light_source(botao : bool; c1 : bool; c2 : bool) returns (s : bool)
var nr_St_5_Ligado : bool; ns_St_5_Ligado_1 : bool; s_St_5_Ligado : bool;
    nr_St_5_Desligado : bool; ns_St_5_Desligado_1 : bool;
    s_St_5_Desligado : bool; ck_6_1 : bool; v_42 : bool; v_41 : bool;
    v_40 : bool; v_39 : bool; v_38 : bool; v : bool; r_St_5_Ligado : bool;
    s_4_St_5_Ligado_1 : bool; r_St_5_Desligado : bool;
    s_4_St_5_Desligado_1 : bool; ck_1 : bool; s_4_1 : bool; ns_1 : bool;
    r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_6_1 = s_4_1;
  s_St_5_Desligado = false;
  nr_St_5_Desligado = false;
  ns_St_5_Desligado_1 = true;
  s_St_5_Ligado = true;
  nr_St_5_Ligado = false;
  ns_St_5_Ligado_1 = false;
  s = merge ck_6_1 (true -> s_St_5_Desligado)(false -> s_St_5_Ligado);
  ns_1 =
    merge ck_6_1 (true -> ns_St_5_Desligado_1)(false -> ns_St_5_Ligado_1);
  nr = merge ck_6_1 (true -> nr_St_5_Desligado)(false -> nr_St_5_Ligado);
  ck_1 = true fby ns_1;
  r_St_5_Desligado = if v_42 then true else (pnr when true(ck_1));
  s_4_St_5_Desligado_1 = if v_42 then false else true;
  v_42 = (v_41 or (c1 when true(ck_1)));
  v_41 = ((botao when true(ck_1)) & v_40);
  v_40 = not((c2 when true(ck_1)));
  r_St_5_Ligado = if v_39 then true else (pnr when false(ck_1));
  s_4_St_5_Ligado_1 = if v_39 then true else false;
  v_39 = (v_38 or (c2 when false(ck_1)));
  v_38 = ((botao when false(ck_1)) & v);
  v = not((c1 when false(ck_1)));
  s_4_1 =
    merge ck_1 (true -> s_4_St_5_Desligado_1)(false -> s_4_St_5_Ligado_1);
  r = merge ck_1 (true -> r_St_5_Desligado)(false -> r_St_5_Ligado)
tel

node management_policy(eco_input : bool; comfort_input : bool)
returns (eco : bool; comfort : bool; pl : int)
var v_243 : bool; v_242 : bool; v_241 : bool; v_240 : bool; v_239 : bool;
    v_238 : bool; v_237 : int; v_236 : int; v_235 : bool; v_234 : bool;
    v_233 : bool; v_232 : bool; ns_St_6_Comfort_2_0 : bool;
    ns_St_6_Comfort_2_1 : bool; ns_St_6_Eco_2_0 : bool;
    ns_St_6_Eco_2_1 : bool; ns_St_6_Minimal_safety_2_0 : bool;
    ns_St_6_Minimal_safety_2_1 : bool; ck_7_2_0 : bool; ck_7_2_1 : bool;
    nr_St_6_Comfort : bool; ns_St_6_Comfort_2 : bool;
    ns_St_6_Comfort_1 : bool; pl_St_6_Comfort : int;
    comfort_St_6_Comfort : bool; eco_St_6_Comfort : bool; nr_St_6_Eco : bool;
    ns_St_6_Eco_2 : bool; ns_St_6_Eco_1 : bool; pl_St_6_Eco : int;
    comfort_St_6_Eco : bool; eco_St_6_Eco : bool;
    nr_St_6_Minimal_safety : bool; ns_St_6_Minimal_safety_2 : bool;
    ns_St_6_Minimal_safety_1 : bool; pl_St_6_Minimal_safety : int;
    comfort_St_6_Minimal_safety : bool; eco_St_6_Minimal_safety : bool;
    ck_7_2 : bool; ck_7_1 : bool; v_48_2_0 : bool; v_48_2_1 : bool;
    v_49 : bool; v_48_2 : bool; v_48_1 : bool; v_46_2_0 : bool;
    v_46_2_1 : bool; v_47 : bool; v_46_2 : bool; v_46_1 : bool; v_45 : bool;
    v_43_2_0 : bool; v_43_2_1 : bool; v_44 : bool; v_43_2 : bool;
    v_43_1 : bool; v : bool; v_251 : bool; v_250 : bool; v_249 : bool;
    v_248 : bool; v_247 : bool; v_246 : bool; v_245 : bool; v_244 : bool;
    s_St_6_Comfort_2_0 : bool; s_St_6_Comfort_2_1 : bool;
    s_St_6_Eco_2_0 : bool; s_St_6_Eco_2_1 : bool;
    s_St_6_Minimal_safety_2_0 : bool; s_St_6_Minimal_safety_2_1 : bool;
    ck_2_0 : bool; ck_2_1 : bool; r_St_6_Comfort : bool;
    s_St_6_Comfort_2 : bool; s_St_6_Comfort_1 : bool; r_St_6_Eco : bool;
    s_St_6_Eco_2 : bool; s_St_6_Eco_1 : bool; r_St_6_Minimal_safety : bool;
    s_St_6_Minimal_safety_2 : bool; s_St_6_Minimal_safety_1 : bool;
    ck_2 : bool; ck_1 : bool; s_2_0 : bool; s_2_1 : bool; ns_2_0 : bool;
    ns_2_1 : bool; s_2 : bool; s_1 : bool; ns_2 : bool; ns_1 : bool;
    r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_7_1 = s_1;
  ck_7_2 = s_2;
  pl_St_6_Minimal_safety = 3000;
  eco_St_6_Minimal_safety = false;
  comfort_St_6_Minimal_safety = false;
  nr_St_6_Minimal_safety = false;
  ns_St_6_Minimal_safety_1 = false;
  ns_St_6_Minimal_safety_2 = false;
  pl_St_6_Eco = 5000;
  eco_St_6_Eco = true;
  comfort_St_6_Eco = false;
  nr_St_6_Eco = false;
  ns_St_6_Eco_1 = true;
  ns_St_6_Eco_2 = false;
  pl_St_6_Comfort = 7000;
  eco_St_6_Comfort = false;
  comfort_St_6_Comfort = true;
  nr_St_6_Comfort = false;
  ns_St_6_Comfort_1 = true;
  ns_St_6_Comfort_2 = true;
  v_232 = merge ck_7_2_1 (true -> eco_St_6_Comfort)(false -> eco_St_6_Eco);
  v_233 =
    merge ck_7_2_0
      (true -> ((true when false(ck_7_1)) when true(ck_7_2_0)))
      (false -> eco_St_6_Minimal_safety);
  eco = merge ck_7_1 (true -> v_232)(false -> v_233);
  v_234 =
    merge ck_7_2_1 (true -> comfort_St_6_Comfort)(false -> comfort_St_6_Eco);
  v_235 =
    merge ck_7_2_0
      (true -> ((true when false(ck_7_1)) when true(ck_7_2_0)))
      (false -> comfort_St_6_Minimal_safety);
  comfort = merge ck_7_1 (true -> v_234)(false -> v_235);
  v_236 = merge ck_7_2_1 (true -> pl_St_6_Comfort)(false -> pl_St_6_Eco);
  v_237 =
    merge ck_7_2_0
      (true -> ((0 when false(ck_7_1)) when true(ck_7_2_0)))
      (false -> pl_St_6_Minimal_safety);
  pl = merge ck_7_1 (true -> v_236)(false -> v_237);
  v_238 = merge ck_7_2_1 (true -> ns_St_6_Comfort_1)(false -> ns_St_6_Eco_1);
  v_239 = merge ck_7_2_1 (true -> ns_St_6_Comfort_2)(false -> ns_St_6_Eco_2);
  v_240 =
    merge ck_7_2_0
      (true -> ((true when false(ck_7_1)) when true(ck_7_2_0)))
      (false -> ns_St_6_Minimal_safety_1);
  v_241 =
    merge ck_7_2_0
      (true -> ((true when false(ck_7_1)) when true(ck_7_2_0)))
      (false -> ns_St_6_Minimal_safety_2);
  ns_1 = merge ck_7_1 (true -> v_238)(false -> v_240);
  ns_2 = merge ck_7_1 (true -> v_239)(false -> v_241);
  v_242 = merge ck_7_2_1 (true -> nr_St_6_Comfort)(false -> nr_St_6_Eco);
  v_243 =
    merge ck_7_2_0
      (true -> ((true when false(ck_7_1)) when true(ck_7_2_0)))
      (false -> nr_St_6_Minimal_safety);
  nr = merge ck_7_1 (true -> v_242)(false -> v_243);
  ck_7_2_1 = (ck_7_2 when true(ck_7_1));
  ck_7_2_0 = (ck_7_2 when false(ck_7_1));
  ns_St_6_Minimal_safety_2_1 =
    (ns_St_6_Minimal_safety_2 when true(ns_St_6_Minimal_safety_1));
  ns_St_6_Minimal_safety_2_0 =
    (ns_St_6_Minimal_safety_2 when false(ns_St_6_Minimal_safety_1));
  ns_St_6_Eco_2_1 = (ns_St_6_Eco_2 when true(ns_St_6_Eco_1));
  ns_St_6_Eco_2_0 = (ns_St_6_Eco_2 when false(ns_St_6_Eco_1));
  ns_St_6_Comfort_2_1 = (ns_St_6_Comfort_2 when true(ns_St_6_Comfort_1));
  ns_St_6_Comfort_2_0 = (ns_St_6_Comfort_2 when false(ns_St_6_Comfort_1));
  v_244 = false fby ns_1;
  v_245 = false fby ns_2;
  ck_1 = v_244;
  ck_2 = v_245;
  r_St_6_Minimal_safety =
    if ((eco_input when false(ck_1)) when false(ck_2_0)) then true else v_49;
  s_St_6_Minimal_safety_1 =
    if ((eco_input when false(ck_1)) when false(ck_2_0))
    then true
    else v_48_1;
  s_St_6_Minimal_safety_2 =
    if ((eco_input when false(ck_1)) when false(ck_2_0))
    then false
    else v_48_2;
  v_49 =
    if ((comfort_input when false(ck_1)) when false(ck_2_0))
    then true
    else ((pnr when false(ck_1)) when false(ck_2_0));
  v_48_1 =
    if ((comfort_input when false(ck_1)) when false(ck_2_0))
    then true
    else false;
  v_48_2 =
    if ((comfort_input when false(ck_1)) when false(ck_2_0))
    then true
    else false;
  v_48_2_1 = (v_48_2 when true(v_48_1));
  v_48_2_0 = (v_48_2 when false(v_48_1));
  r_St_6_Eco = if v_45 then true else v_47;
  s_St_6_Eco_1 = if v_45 then false else v_46_1;
  s_St_6_Eco_2 = if v_45 then false else v_46_2;
  v_47 =
    if ((comfort_input when true(ck_1)) when false(ck_2_1))
    then true
    else ((pnr when true(ck_1)) when false(ck_2_1));
  v_46_1 =
    if ((comfort_input when true(ck_1)) when false(ck_2_1))
    then true
    else true;
  v_46_2 =
    if ((comfort_input when true(ck_1)) when false(ck_2_1))
    then true
    else false;
  v_45 = not(((eco_input when true(ck_1)) when false(ck_2_1)));
  v_46_2_1 = (v_46_2 when true(v_46_1));
  v_46_2_0 = (v_46_2 when false(v_46_1));
  r_St_6_Comfort =
    if ((eco_input when true(ck_1)) when true(ck_2_1)) then true else v_44;
  s_St_6_Comfort_1 =
    if ((eco_input when true(ck_1)) when true(ck_2_1)) then true else v_43_1;
  s_St_6_Comfort_2 =
    if ((eco_input when true(ck_1)) when true(ck_2_1)) then false else v_43_2;
  v_44 = if v then true else ((pnr when true(ck_1)) when true(ck_2_1));
  v_43_1 = if v then false else true;
  v_43_2 = if v then false else true;
  v = not(((comfort_input when true(ck_1)) when true(ck_2_1)));
  v_43_2_1 = (v_43_2 when true(v_43_1));
  v_43_2_0 = (v_43_2 when false(v_43_1));
  v_246 = merge ck_2_1 (true -> s_St_6_Comfort_1)(false -> s_St_6_Eco_1);
  v_247 = merge ck_2_1 (true -> s_St_6_Comfort_2)(false -> s_St_6_Eco_2);
  v_248 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))
      (false -> s_St_6_Minimal_safety_1);
  v_249 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))
      (false -> s_St_6_Minimal_safety_2);
  s_1 = merge ck_1 (true -> v_246)(false -> v_248);
  s_2 = merge ck_1 (true -> v_247)(false -> v_249);
  v_250 = merge ck_2_1 (true -> r_St_6_Comfort)(false -> r_St_6_Eco);
  v_251 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))
      (false -> r_St_6_Minimal_safety);
  r = merge ck_1 (true -> v_250)(false -> v_251);
  ck_2_1 = (ck_2 when true(ck_1));
  ck_2_0 = (ck_2 when false(ck_1));
  s_St_6_Minimal_safety_2_1 =
    (s_St_6_Minimal_safety_2 when true(s_St_6_Minimal_safety_1));
  s_St_6_Minimal_safety_2_0 =
    (s_St_6_Minimal_safety_2 when false(s_St_6_Minimal_safety_1));
  s_St_6_Eco_2_1 = (s_St_6_Eco_2 when true(s_St_6_Eco_1));
  s_St_6_Eco_2_0 = (s_St_6_Eco_2 when false(s_St_6_Eco_1));
  s_St_6_Comfort_2_1 = (s_St_6_Comfort_2 when true(s_St_6_Comfort_1));
  s_St_6_Comfort_2_0 = (s_St_6_Comfort_2 when false(s_St_6_Comfort_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_2_0 = (ns_2 when false(ns_1));
  s_2_1 = (s_2 when true(s_1));
  s_2_0 = (s_2 when false(s_1))
tel

node contrato(cj : bool; cp : bool; pporta : bool; pjanela : bool;
               rup1 : bool; rdown1 : bool; rup2 : bool; rdown2 : bool;
               presenca : bool; bl : bool; bt : bool)
returns (porta : bool; janela : bool; lamp : bool; tv : bool; ocupado : bool;
          rad_pot : int; rad_state : int)
contract
  var off_frost : bool; r4 : bool; r3 : bool; r1 : bool; v : bool;
      v_50 : bool; v_51 : bool; v_52 : bool; v_53 : bool; v_54 : bool;
      v_55 : bool; v_56 : bool; v_57 : bool;
  let
    v = (lamp or tv);
    v_50 = not(v);
    v_51 = (v_50 & off_frost);
    r4 = (ocupado or v_51);
    v_52 = (porta or janela);
    v_53 = not(v_52);
    r3 = (v_53 or off_frost);
    v_54 = not(ocupado);
    v_55 = (v_54 or tv);
    r1 = (v_55 or lamp);
    off_frost = (rad_state <= 1);
    v_56 = (r1 & r3);
    v_57 = (v_56 & r4)
  tel
  assume true@ enforce v_57]
                 with (ct2 : bool; ct1 : bool; cl2 : bool; cl1 : bool;
                        rc2 : bool; rc1 : bool)
                 var nr_St_7_Ocupied : bool; ns_St_7_Ocupied_1 : bool;
                     room_oc_St_7_Ocupied : bool; nr_St_7_Empty : bool;
                     ns_St_7_Empty_1 : bool; room_oc_St_7_Empty : bool;
                     ck_18_1 : bool; v_97 : bool; r_St_7_Ocupied : bool;
                     s_5_St_7_Ocupied_1 : bool; r_St_7_Empty : bool;
                     s_5_St_7_Empty_1 : bool; ck_17_1 : bool;
                     nr_1_St_8_Ligado : bool; ns_1_St_8_Ligado_1 : bool;
                     s_1_St_8_Ligado : bool; nr_1_St_8_Desligado : bool;
                     ns_1_St_8_Desligado_1 : bool; s_1_St_8_Desligado : bool;
                     ck_16_1 : bool; v_96 : bool; v_95 : bool; v_94 : bool;
                     v_93 : bool; v_92 : bool; v_91 : bool;
                     r_1_St_8_Ligado : bool; s_6_St_8_Ligado_1 : bool;
                     r_1_St_8_Desligado : bool; s_6_St_8_Desligado_1 : bool;
                     ck_15_1 : bool; nr_2_St_9_Ligado : bool;
                     ns_2_St_9_Ligado_1 : bool; s_St_9_Ligado : bool;
                     nr_2_St_9_Desligado : bool;
                     ns_2_St_9_Desligado_1 : bool; s_St_9_Desligado : bool;
                     ck_14_1 : bool; v_90 : bool; v_89 : bool; v_88 : bool;
                     v_87 : bool; v_86 : bool; v_85 : bool;
                     r_2_St_9_Ligado : bool; s_7_St_9_Ligado_1 : bool;
                     r_2_St_9_Desligado : bool; s_7_St_9_Desligado_1 : bool;
                     ck_13_1 : bool; nr_3_St_10_Open : bool;
                     ns_3_St_10_Open_1 : bool; door_open_1_St_10_Open : bool;
                     nr_3_St_10_Closed : bool; ns_3_St_10_Closed_1 : bool;
                     door_open_1_St_10_Closed : bool; ck_12_1 : bool;
                     v_84 : bool; v_83 : bool; v_82 : bool;
                     r_3_St_10_Open : bool; s_8_St_10_Open_1 : bool;
                     r_3_St_10_Closed : bool; s_8_St_10_Closed_1 : bool;
                     ck_11_1 : bool; nr_4_St_11_Open : bool;
                     ns_4_St_11_Open_1 : bool; door_open_St_11_Open : bool;
                     nr_4_St_11_Closed : bool; ns_4_St_11_Closed_1 : bool;
                     door_open_St_11_Closed : bool; ck_10_1 : bool;
                     v_81 : bool; v_80 : bool; v_79 : bool;
                     r_4_St_11_Open : bool; s_9_St_11_Open_1 : bool;
                     r_4_St_11_Closed : bool; s_9_St_11_Closed_1 : bool;
                     ck_9_1 : bool; v_261 : bool; v_260 : bool; v_259 : bool;
                     v_258 : bool; v_257 : bool; v_256 : bool; v_255 : int;
                     v_254 : int; v_253 : int; v_252 : int;
                     ns_5_St_12_High_2_0 : bool; ns_5_St_12_High_2_1 : bool;
                     ns_5_St_12_Eco_2_0 : bool; ns_5_St_12_Eco_2_1 : bool;
                     ns_5_St_12_Frostprotection_2_0 : bool;
                     ns_5_St_12_Frostprotection_2_1 : bool;
                     ns_5_St_12_Off_2_0 : bool; ns_5_St_12_Off_2_1 : bool;
                     ck_8_2_0 : bool; ck_8_2_1 : bool;
                     nr_5_St_12_High : bool; ns_5_St_12_High_2 : bool;
                     ns_5_St_12_High_1 : bool; i_St_12_High : int;
                     p_St_12_High : int; nr_5_St_12_Eco : bool;
                     ns_5_St_12_Eco_2 : bool; ns_5_St_12_Eco_1 : bool;
                     i_St_12_Eco : int; p_St_12_Eco : int;
                     nr_5_St_12_Frostprotection : bool;
                     ns_5_St_12_Frostprotection_2 : bool;
                     ns_5_St_12_Frostprotection_1 : bool;
                     i_St_12_Frostprotection : int;
                     p_St_12_Frostprotection : int; nr_5_St_12_Off : bool;
                     ns_5_St_12_Off_2 : bool; ns_5_St_12_Off_1 : bool;
                     i_St_12_Off : int; p_St_12_Off : int; ck_8_2 : bool;
                     ck_8_1 : bool; v_78 : bool; v_77 : bool;
                     v_75_2_0 : bool; v_75_2_1 : bool; v_73_2_0 : bool;
                     v_73_2_1 : bool; v_76 : bool; v_75_2 : bool;
                     v_75_1 : bool; v_74 : bool; v_73_2 : bool;
                     v_73_1 : bool; v_72 : bool; v_71 : bool; v_70 : bool;
                     v_69 : bool; v_67_2_0 : bool; v_67_2_1 : bool;
                     v_68 : bool; v_67_2 : bool; v_67_1 : bool; v_66 : bool;
                     v_65 : bool; v_64 : bool; v_62_2_0 : bool;
                     v_62_2_1 : bool; v_63 : bool; v_62_2 : bool;
                     v_62_1 : bool; v_61 : bool; v_60 : bool; v_59 : bool;
                     v_58 : bool; v_269 : bool; v_268 : bool; v_267 : bool;
                     v_266 : bool; v_265 : bool; v_264 : bool; v_263 : bool;
                     v_262 : bool; s_10_St_12_High_2_0 : bool;
                     s_10_St_12_High_2_1 : bool; s_10_St_12_Eco_2_0 : bool;
                     s_10_St_12_Eco_2_1 : bool;
                     s_10_St_12_Frostprotection_2_0 : bool;
                     s_10_St_12_Frostprotection_2_1 : bool;
                     s_10_St_12_Off_2_0 : bool; s_10_St_12_Off_2_1 : bool;
                     ck_2_0 : bool; ck_2_1 : bool; r_5_St_12_High : bool;
                     s_10_St_12_High_2 : bool; s_10_St_12_High_1 : bool;
                     r_5_St_12_Eco : bool; s_10_St_12_Eco_2 : bool;
                     s_10_St_12_Eco_1 : bool;
                     r_5_St_12_Frostprotection : bool;
                     s_10_St_12_Frostprotection_2 : bool;
                     s_10_St_12_Frostprotection_1 : bool;
                     r_5_St_12_Off : bool; s_10_St_12_Off_2 : bool;
                     s_10_St_12_Off_1 : bool; ck_2 : bool; ck_1 : bool;
                     s_10_2_0 : bool; s_10_2_1 : bool; ns_5_2_0 : bool;
                     ns_5_2_1 : bool; s_10_2 : bool; s_10_1 : bool;
                     ns_5_2 : bool; ns_5_1 : bool; r_5 : bool; nr_5 : bool;
                     pnr_5 : bool; s_9_1 : bool; ns_4_1 : bool; r_4 : bool;
                     nr_4 : bool; pnr_4 : bool; s_8_1 : bool; ns_3_1 : bool;
                     r_3 : bool; nr_3 : bool; pnr_3 : bool; s_7_1 : bool;
                     ns_2_1 : bool; r_2 : bool; nr_2 : bool; pnr_2 : bool;
                     s_6_1 : bool; ns_1_1 : bool; r_1 : bool; nr_1 : bool;
                     pnr_1 : bool; s_5_1 : bool; ns_1_2 : bool; r : bool;
                     nr : bool; pnr : bool; presence : bool; room_oc : bool;
                     botao_1 : bool; c1_2 : bool; c2_2 : bool; s_1 : bool;
                     botao : bool; c1_1 : bool; c2_1 : bool; s : bool;
                     push_1 : bool; c_door_1 : bool; door_open_1 : bool;
                     push : bool; c_door : bool; door_open : bool;
                     up1 : bool; down1 : bool; up2 : bool; down2 : bool;
                     c1 : bool; c2 : bool; p : int; i : int;
  let
    presence = presenca;
    pnr = false fby nr;
    ck_18_1 = s_5_1;
    room_oc_St_7_Empty = false;
    nr_St_7_Empty = false;
    ns_St_7_Empty_1 = true;
    room_oc_St_7_Ocupied = true;
    nr_St_7_Ocupied = false;
    ns_St_7_Ocupied_1 = false;
    room_oc =
      merge ck_18_1
        (true -> room_oc_St_7_Empty)(false -> room_oc_St_7_Ocupied);
    ns_1_2 =
      merge ck_18_1 (true -> ns_St_7_Empty_1)(false -> ns_St_7_Ocupied_1);
    nr = merge ck_18_1 (true -> nr_St_7_Empty)(false -> nr_St_7_Ocupied);
    ck_17_1 = true fby ns_1_2;
    r_St_7_Empty =
      if (presence when true(ck_17_1))
      then true
      else (pnr when true(ck_17_1));
    s_5_St_7_Empty_1 = if (presence when true(ck_17_1)) then false else true;
    r_St_7_Ocupied = if v_97 then true else (pnr when false(ck_17_1));
    s_5_St_7_Ocupied_1 = if v_97 then true else false;
    v_97 = not((presence when false(ck_17_1)));
    s_5_1 =
      merge ck_17_1 (true -> s_5_St_7_Empty_1)(false -> s_5_St_7_Ocupied_1);
    r = merge ck_17_1 (true -> r_St_7_Empty)(false -> r_St_7_Ocupied);
    botao_1 = bt;
    c1_2 = ct1;
    c2_2 = ct2;
    pnr_1 = false fby nr_1;
    ck_16_1 = s_6_1;
    s_1_St_8_Desligado = false;
    nr_1_St_8_Desligado = false;
    ns_1_St_8_Desligado_1 = true;
    s_1_St_8_Ligado = true;
    nr_1_St_8_Ligado = false;
    ns_1_St_8_Ligado_1 = false;
    s_1 =
      merge ck_16_1 (true -> s_1_St_8_Desligado)(false -> s_1_St_8_Ligado);
    ns_1_1 =
      merge ck_16_1
        (true -> ns_1_St_8_Desligado_1)(false -> ns_1_St_8_Ligado_1);
    nr_1 =
      merge ck_16_1 (true -> nr_1_St_8_Desligado)(false -> nr_1_St_8_Ligado);
    ck_15_1 = true fby ns_1_1;
    r_1_St_8_Desligado = if v_96 then true else (pnr_1 when true(ck_15_1));
    s_6_St_8_Desligado_1 = if v_96 then false else true;
    v_96 = (v_95 or (c1_2 when true(ck_15_1)));
    v_95 = ((botao_1 when true(ck_15_1)) & v_94);
    v_94 = not((c2_2 when true(ck_15_1)));
    r_1_St_8_Ligado = if v_93 then true else (pnr_1 when false(ck_15_1));
    s_6_St_8_Ligado_1 = if v_93 then true else false;
    v_93 = (v_92 or (c2_2 when false(ck_15_1)));
    v_92 = ((botao_1 when false(ck_15_1)) & v_91);
    v_91 = not((c1_2 when false(ck_15_1)));
    s_6_1 =
      merge ck_15_1
        (true -> s_6_St_8_Desligado_1)(false -> s_6_St_8_Ligado_1);
    r_1 =
      merge ck_15_1 (true -> r_1_St_8_Desligado)(false -> r_1_St_8_Ligado);
    botao = bl;
    c1_1 = cl1;
    c2_1 = cl2;
    pnr_2 = false fby nr_2;
    ck_14_1 = s_7_1;
    s_St_9_Desligado = false;
    nr_2_St_9_Desligado = false;
    ns_2_St_9_Desligado_1 = true;
    s_St_9_Ligado = true;
    nr_2_St_9_Ligado = false;
    ns_2_St_9_Ligado_1 = false;
    s = merge ck_14_1 (true -> s_St_9_Desligado)(false -> s_St_9_Ligado);
    ns_2_1 =
      merge ck_14_1
        (true -> ns_2_St_9_Desligado_1)(false -> ns_2_St_9_Ligado_1);
    nr_2 =
      merge ck_14_1 (true -> nr_2_St_9_Desligado)(false -> nr_2_St_9_Ligado);
    ck_13_1 = true fby ns_2_1;
    r_2_St_9_Desligado = if v_90 then true else (pnr_2 when true(ck_13_1));
    s_7_St_9_Desligado_1 = if v_90 then false else true;
    v_90 = (v_89 or (c1_1 when true(ck_13_1)));
    v_89 = ((botao when true(ck_13_1)) & v_88);
    v_88 = not((c2_1 when true(ck_13_1)));
    r_2_St_9_Ligado = if v_87 then true else (pnr_2 when false(ck_13_1));
    s_7_St_9_Ligado_1 = if v_87 then true else false;
    v_87 = (v_86 or (c2_1 when false(ck_13_1)));
    v_86 = ((botao when false(ck_13_1)) & v_85);
    v_85 = not((c1_1 when false(ck_13_1)));
    s_7_1 =
      merge ck_13_1
        (true -> s_7_St_9_Desligado_1)(false -> s_7_St_9_Ligado_1);
    r_2 =
      merge ck_13_1 (true -> r_2_St_9_Desligado)(false -> r_2_St_9_Ligado);
    push_1 = pjanela;
    c_door_1 = cj;
    pnr_3 = false fby nr_3;
    ck_12_1 = s_8_1;
    door_open_1_St_10_Closed = false;
    nr_3_St_10_Closed = false;
    ns_3_St_10_Closed_1 = true;
    door_open_1_St_10_Open = true;
    nr_3_St_10_Open = false;
    ns_3_St_10_Open_1 = false;
    door_open_1 =
      merge ck_12_1
        (true -> door_open_1_St_10_Closed)(false -> door_open_1_St_10_Open);
    ns_3_1 =
      merge ck_12_1 (true -> ns_3_St_10_Closed_1)(false -> ns_3_St_10_Open_1);
    nr_3 =
      merge ck_12_1 (true -> nr_3_St_10_Closed)(false -> nr_3_St_10_Open);
    ck_11_1 = true fby ns_3_1;
    r_3_St_10_Closed = if v_84 then true else (pnr_3 when true(ck_11_1));
    s_8_St_10_Closed_1 = if v_84 then false else true;
    v_84 = ((push_1 when true(ck_11_1)) & (c_door_1 when true(ck_11_1)));
    r_3_St_10_Open = if v_83 then true else (pnr_3 when false(ck_11_1));
    s_8_St_10_Open_1 = if v_83 then true else false;
    v_83 = ((push_1 when false(ck_11_1)) or v_82);
    v_82 = not((c_door_1 when false(ck_11_1)));
    s_8_1 =
      merge ck_11_1 (true -> s_8_St_10_Closed_1)(false -> s_8_St_10_Open_1);
    r_3 = merge ck_11_1 (true -> r_3_St_10_Closed)(false -> r_3_St_10_Open);
    push = pporta;
    c_door = cp;
    pnr_4 = false fby nr_4;
    ck_10_1 = s_9_1;
    door_open_St_11_Closed = false;
    nr_4_St_11_Closed = false;
    ns_4_St_11_Closed_1 = true;
    door_open_St_11_Open = true;
    nr_4_St_11_Open = false;
    ns_4_St_11_Open_1 = false;
    door_open =
      merge ck_10_1
        (true -> door_open_St_11_Closed)(false -> door_open_St_11_Open);
    ns_4_1 =
      merge ck_10_1 (true -> ns_4_St_11_Closed_1)(false -> ns_4_St_11_Open_1);
    nr_4 =
      merge ck_10_1 (true -> nr_4_St_11_Closed)(false -> nr_4_St_11_Open);
    ck_9_1 = true fby ns_4_1;
    r_4_St_11_Closed = if v_81 then true else (pnr_4 when true(ck_9_1));
    s_9_St_11_Closed_1 = if v_81 then false else true;
    v_81 = ((push when true(ck_9_1)) & (c_door when true(ck_9_1)));
    r_4_St_11_Open = if v_80 then true else (pnr_4 when false(ck_9_1));
    s_9_St_11_Open_1 = if v_80 then true else false;
    v_80 = ((push when false(ck_9_1)) or v_79);
    v_79 = not((c_door when false(ck_9_1)));
    s_9_1 =
      merge ck_9_1 (true -> s_9_St_11_Closed_1)(false -> s_9_St_11_Open_1);
    r_4 = merge ck_9_1 (true -> r_4_St_11_Closed)(false -> r_4_St_11_Open);
    up1 = rup1;
    down1 = rdown1;
    up2 = rup2;
    down2 = rdown2;
    c1 = rc1;
    c2 = rc2;
    pnr_5 = false fby nr_5;
    ck_8_1 = s_10_1;
    ck_8_2 = s_10_2;
    p_St_12_Off = 0;
    i_St_12_Off = 0;
    nr_5_St_12_Off = false;
    ns_5_St_12_Off_1 = false;
    ns_5_St_12_Off_2 = false;
    p_St_12_Frostprotection = 300;
    i_St_12_Frostprotection = 1;
    nr_5_St_12_Frostprotection = false;
    ns_5_St_12_Frostprotection_1 = true;
    ns_5_St_12_Frostprotection_2 = false;
    p_St_12_Eco = 1500;
    i_St_12_Eco = 2;
    nr_5_St_12_Eco = false;
    ns_5_St_12_Eco_1 = true;
    ns_5_St_12_Eco_2 = true;
    p_St_12_High = 2000;
    i_St_12_High = 3;
    nr_5_St_12_High = false;
    ns_5_St_12_High_1 = false;
    ns_5_St_12_High_2 = true;
    v_252 =
      merge ck_8_2_1 (true -> p_St_12_Eco)(false -> p_St_12_Frostprotection);
    v_253 = merge ck_8_2_0 (true -> p_St_12_High)(false -> p_St_12_Off);
    p = merge ck_8_1 (true -> v_252)(false -> v_253);
    v_254 =
      merge ck_8_2_1 (true -> i_St_12_Eco)(false -> i_St_12_Frostprotection);
    v_255 = merge ck_8_2_0 (true -> i_St_12_High)(false -> i_St_12_Off);
    i = merge ck_8_1 (true -> v_254)(false -> v_255);
    v_256 =
      merge ck_8_2_1
        (true -> ns_5_St_12_Eco_1)(false -> ns_5_St_12_Frostprotection_1);
    v_257 =
      merge ck_8_2_1
        (true -> ns_5_St_12_Eco_2)(false -> ns_5_St_12_Frostprotection_2);
    v_258 =
      merge ck_8_2_0 (true -> ns_5_St_12_High_1)(false -> ns_5_St_12_Off_1);
    v_259 =
      merge ck_8_2_0 (true -> ns_5_St_12_High_2)(false -> ns_5_St_12_Off_2);
    ns_5_1 = merge ck_8_1 (true -> v_256)(false -> v_258);
    ns_5_2 = merge ck_8_1 (true -> v_257)(false -> v_259);
    v_260 =
      merge ck_8_2_1
        (true -> nr_5_St_12_Eco)(false -> nr_5_St_12_Frostprotection);
    v_261 = merge ck_8_2_0 (true -> nr_5_St_12_High)(false -> nr_5_St_12_Off);
    nr_5 = merge ck_8_1 (true -> v_260)(false -> v_261);
    ck_8_2_1 = (ck_8_2 when true(ck_8_1));
    ck_8_2_0 = (ck_8_2 when false(ck_8_1));
    ns_5_St_12_Off_2_1 = (ns_5_St_12_Off_2 when true(ns_5_St_12_Off_1));
    ns_5_St_12_Off_2_0 = (ns_5_St_12_Off_2 when false(ns_5_St_12_Off_1));
    ns_5_St_12_Frostprotection_2_1 =
      (ns_5_St_12_Frostprotection_2 when true(ns_5_St_12_Frostprotection_1));
    ns_5_St_12_Frostprotection_2_0 =
      (ns_5_St_12_Frostprotection_2 when false(ns_5_St_12_Frostprotection_1));
    ns_5_St_12_Eco_2_1 = (ns_5_St_12_Eco_2 when true(ns_5_St_12_Eco_1));
    ns_5_St_12_Eco_2_0 = (ns_5_St_12_Eco_2 when false(ns_5_St_12_Eco_1));
    ns_5_St_12_High_2_1 = (ns_5_St_12_High_2 when true(ns_5_St_12_High_1));
    ns_5_St_12_High_2_0 = (ns_5_St_12_High_2 when false(ns_5_St_12_High_1));
    v_262 = false fby ns_5_1;
    v_263 = false fby ns_5_2;
    ck_1 = v_262;
    ck_2 = v_263;
    r_5_St_12_Off =
      if v_78 then true else ((pnr_5 when false(ck_1)) when false(ck_2_0));
    s_10_St_12_Off_1 = if v_78 then true else false;
    s_10_St_12_Off_2 = if v_78 then false else false;
    v_78 = (((up1 when false(ck_1)) when false(ck_2_0)) or v_77);
    v_77 = not(((c1 when false(ck_1)) when false(ck_2_0)));
    r_5_St_12_Frostprotection = if v_69 then true else v_76;
    s_10_St_12_Frostprotection_1 = if v_69 then true else v_75_1;
    s_10_St_12_Frostprotection_2 = if v_69 then true else v_75_2;
    v_76 = if v_70 then true else v_74;
    v_75_1 = if v_70 then false else v_73_1;
    v_75_2 = if v_70 then true else v_73_2;
    v_74 =
      if v_72 then true else ((pnr_5 when true(ck_1)) when false(ck_2_1));
    v_73_1 = if v_72 then false else true;
    v_73_2 = if v_72 then false else false;
    v_72 = (((down1 when true(ck_1)) when false(ck_2_1)) or v_71);
    v_71 = not(((c1 when true(ck_1)) when false(ck_2_1)));
    v_70 =
      (((up2 when true(ck_1)) when false(ck_2_1)) &
       ((c2 when true(ck_1)) when false(ck_2_1)));
    v_69 =
      (((up1 when true(ck_1)) when false(ck_2_1)) &
       ((c1 when true(ck_1)) when false(ck_2_1)));
    v_73_2_1 = (v_73_2 when true(v_73_1));
    v_73_2_0 = (v_73_2 when false(v_73_1));
    v_75_2_1 = (v_75_2 when true(v_75_1));
    v_75_2_0 = (v_75_2 when false(v_75_1));
    r_5_St_12_Eco = if v_65 then true else v_68;
    s_10_St_12_Eco_1 = if v_65 then true else v_67_1;
    s_10_St_12_Eco_2 = if v_65 then false else v_67_2;
    v_68 = if v_66 then true else ((pnr_5 when true(ck_1)) when true(ck_2_1));
    v_67_1 = if v_66 then false else true;
    v_67_2 = if v_66 then true else true;
    v_66 =
      (((up2 when true(ck_1)) when true(ck_2_1)) &
       ((c2 when true(ck_1)) when true(ck_2_1)));
    v_65 = (((down1 when true(ck_1)) when true(ck_2_1)) or v_64);
    v_64 = not(((c1 when true(ck_1)) when true(ck_2_1)));
    v_67_2_1 = (v_67_2 when true(v_67_1));
    v_67_2_0 = (v_67_2 when false(v_67_1));
    r_5_St_12_High = if v_59 then true else v_63;
    s_10_St_12_High_1 = if v_59 then true else v_62_1;
    s_10_St_12_High_2 = if v_59 then true else v_62_2;
    v_63 =
      if v_61 then true else ((pnr_5 when false(ck_1)) when true(ck_2_0));
    v_62_1 = if v_61 then true else false;
    v_62_2 = if v_61 then false else true;
    v_61 = (((down2 when false(ck_1)) when true(ck_2_0)) or v_60);
    v_60 = not(((c2 when false(ck_1)) when true(ck_2_0)));
    v_59 = (((down1 when false(ck_1)) when true(ck_2_0)) or v_58);
    v_58 = not(((c1 when false(ck_1)) when true(ck_2_0)));
    v_62_2_1 = (v_62_2 when true(v_62_1));
    v_62_2_0 = (v_62_2 when false(v_62_1));
    v_264 =
      merge ck_2_1
        (true -> s_10_St_12_Eco_1)(false -> s_10_St_12_Frostprotection_1);
    v_265 =
      merge ck_2_1
        (true -> s_10_St_12_Eco_2)(false -> s_10_St_12_Frostprotection_2);
    v_266 =
      merge ck_2_0 (true -> s_10_St_12_High_1)(false -> s_10_St_12_Off_1);
    v_267 =
      merge ck_2_0 (true -> s_10_St_12_High_2)(false -> s_10_St_12_Off_2);
    s_10_1 = merge ck_1 (true -> v_264)(false -> v_266);
    s_10_2 = merge ck_1 (true -> v_265)(false -> v_267);
    v_268 =
      merge ck_2_1
        (true -> r_5_St_12_Eco)(false -> r_5_St_12_Frostprotection);
    v_269 = merge ck_2_0 (true -> r_5_St_12_High)(false -> r_5_St_12_Off);
    r_5 = merge ck_1 (true -> v_268)(false -> v_269);
    ck_2_1 = (ck_2 when true(ck_1));
    ck_2_0 = (ck_2 when false(ck_1));
    s_10_St_12_Off_2_1 = (s_10_St_12_Off_2 when true(s_10_St_12_Off_1));
    s_10_St_12_Off_2_0 = (s_10_St_12_Off_2 when false(s_10_St_12_Off_1));
    s_10_St_12_Frostprotection_2_1 =
      (s_10_St_12_Frostprotection_2 when true(s_10_St_12_Frostprotection_1));
    s_10_St_12_Frostprotection_2_0 =
      (s_10_St_12_Frostprotection_2 when false(s_10_St_12_Frostprotection_1));
    s_10_St_12_Eco_2_1 = (s_10_St_12_Eco_2 when true(s_10_St_12_Eco_1));
    s_10_St_12_Eco_2_0 = (s_10_St_12_Eco_2 when false(s_10_St_12_Eco_1));
    s_10_St_12_High_2_1 = (s_10_St_12_High_2 when true(s_10_St_12_High_1));
    s_10_St_12_High_2_0 = (s_10_St_12_High_2 when false(s_10_St_12_High_1));
    rad_state = i;
    rad_pot = p;
    porta = door_open;
    janela = door_open_1;
    lamp = s;
    tv = s_1;
    ocupado = room_oc;
    ns_5_2_1 = (ns_5_2 when true(ns_5_1));
    ns_5_2_0 = (ns_5_2 when false(ns_5_1));
    s_10_2_1 = (s_10_2 when true(s_10_1));
    s_10_2_0 = (s_10_2 when false(s_10_1))
  tel

